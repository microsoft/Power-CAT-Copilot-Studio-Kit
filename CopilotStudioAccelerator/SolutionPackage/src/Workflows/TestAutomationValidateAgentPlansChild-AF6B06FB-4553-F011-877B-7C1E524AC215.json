{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "cat_CopilotStudioAcceleratorDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "cat_CopilotStudioAcceleratorDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Power Automate Region (cat_PowerAutomateEndpoint)": {
          "defaultValue": "Commercial",
          "type": "String",
          "metadata": {
            "schemaName": "cat_PowerAutomateEndpoint",
            "description": "Specify your Power Automate environment region/cloud: Commercial, GCC, GCC High, or DoD."
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "0f7f5a01-712b-40c7-9328-12e7ba4b93d9"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "AgentConfigurationId",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "AgentTestRunId",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1"
              ]
            }
          }
        }
      },
      "actions": {
        "Get_Copilot_Configuration": {
          "runAfter": {
            "Update_Copilot_Test_Run:_Running": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "25599a62-4e1c-487d-84bb-d087bb11b867"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "GetItem",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cat_copilotconfigurations",
              "recordId": "@triggerBody()['text']",
              "$select": "cat_dataverseurl, cat_copilotid"
            },
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            }
          }
        },
        "Apply_to_each:_Test_Result": {
          "foreach": "@outputs('Get_Copilot_Test_Results')?['body/value']",
          "actions": {
            "List_rows_from_selected_environment:_Get_Conversation_Transcripts": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "70031cec-f284-4b6b-931d-2e6b8593896e"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecordsWithOrganization",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "organization": "@outputs('Get_Copilot_Configuration')?['body/cat_dataverseurl']",
                  "entityName": "conversationtranscripts",
                  "$select": "content",
                  "$filter": "startswith(name, '@{items('Apply_to_each:_Test_Result')?['cat_name']}')"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Condition:_Check_if_Conversation_Transcript_Available": {
              "actions": {
                "Parse_JSON:_Conversation_Transcript": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "fa9f0568-ff88-4288-861f-3115722fdbbf"
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@outputs('List_rows_from_selected_environment:_Get_Conversation_Transcripts')?['body/value'][0]?['content']",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "activities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "valueType": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "timestamp": {
                                "type": "integer"
                              },
                              "from": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "value": {
                                "type": "object",
                                "properties": {
                                  "lastSessionOutcome": {
                                    "type": "string"
                                  },
                                  "lastSessionOutcomeReason": {
                                    "type": "string"
                                  },
                                  "isDesignMode": {
                                    "type": "boolean"
                                  },
                                  "locale": {
                                    "type": "string"
                                  }
                                }
                              },
                              "id": {
                                "type": "string"
                              },
                              "channelId": {
                                "type": "string"
                              },
                              "text": {
                                "type": "string"
                              },
                              "attachments": {
                                "type": "array"
                              },
                              "name": {
                                "type": "string"
                              },
                              "replyToId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "timestamp",
                              "from"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Condition:_Check_for_Multiturn_Test": {
                  "actions": {
                    "Scope:_Non_Multiturn_Execution": {
                      "actions": {
                        "Select:_Trim_extra_spaces_for_ExpectedToolsArray": {
                          "runAfter": {
                            "Filter_array:_non-empty_values": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "b3131644-247e-4326-8950-d951e2e84bfc"
                          },
                          "type": "Select",
                          "inputs": {
                            "from": "@body('Filter_array:_non-empty_values')",
                            "select": "@trim(item())"
                          }
                        },
                        "Filter_array:_DynamicPlanReceived": {
                          "runAfter": {
                            "Select:_Trim_extra_spaces_for_ExpectedToolsArray": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "1e833c23-631a-4cd7-952f-8a29fb31ad29"
                          },
                          "type": "Query",
                          "inputs": {
                            "from": "@body('Parse_JSON:_Conversation_Transcript')?['activities']",
                            "where": "@equals(item()?['valueType'], 'DynamicPlanReceived')"
                          }
                        },
                        "Apply_to_each:_DynamicPlanReceived": {
                          "foreach": "@body('Filter_array:_DynamicPlanReceived')",
                          "actions": {
                            "Apply_to_each:_Steps": {
                              "foreach": "@item()?['value']?['steps']",
                              "actions": {
                                "Filter_array:_Transcript_Tool_Metadata": {
                                  "runAfter": {},
                                  "metadata": {
                                    "operationMetadataId": "acccc4e5-728b-4012-993e-9c1fda768534"
                                  },
                                  "type": "Query",
                                  "inputs": {
                                    "from": "@outputs('List_rows_from_selected_environment:_Read_Agent_Bot_Components')?['body/value']",
                                    "where": "@equals(item()?['schemaname'], items('Apply_to_each:_Steps'))"
                                  }
                                },
                                "Condition:_Check_for_Valid_Tools": {
                                  "actions": {
                                    "Compose:_Tool_Record": {
                                      "runAfter": {},
                                      "metadata": {
                                        "operationMetadataId": "547e88b6-3c81-4b90-b023-5a26bde62765"
                                      },
                                      "type": "Compose",
                                      "inputs": "@first(body('Filter_array:_Transcript_Tool_Metadata'))"
                                    },
                                    "Compose:_Tool_Name": {
                                      "runAfter": {
                                        "Compose:_Tool_Record": [
                                          "Succeeded"
                                        ]
                                      },
                                      "metadata": {
                                        "operationMetadataId": "edbfef32-7740-4046-80e9-e7eb48d2fd96"
                                      },
                                      "type": "Compose",
                                      "inputs": "@if(\n  contains(outputs('Compose:_Tool_Record')?['data'], 'modelDisplayName: '),\n  trim(\n    replace(\n      replace(\n        coalesce(\n          if(contains(outputs('Compose:_Tool_Record')?['data'], 'modelDescription:'), split(split(outputs('Compose:_Tool_Record')?['data'], 'modelDisplayName:')[1], 'modelDescription:')[0], null),\n          if(contains(outputs('Compose:_Tool_Record')?['data'], 'outputs:'), split(split(outputs('Compose:_Tool_Record')?['data'], 'modelDisplayName:')[1], 'outputs:')[0], null),\n          if(contains(outputs('Compose:_Tool_Record')?['data'], 'action:'), split(split(outputs('Compose:_Tool_Record')?['data'], 'modelDisplayName:')[1], 'action:')[0], null),\n          split(split(outputs('Compose:_Tool_Record')?['data'], 'modelDisplayName:')[1], '\\r\\n')[0]\n        ),\n        '\\r\\n', ''\n      ),\n      '\\n', ''\n    )\n  ),\n  null\n)"
                                    },
                                    "Compose:_Flow_Id": {
                                      "runAfter": {
                                        "Compose:_Tool_Name": [
                                          "Succeeded"
                                        ]
                                      },
                                      "metadata": {
                                        "operationMetadataId": "28b8c5f2-c0f6-43e4-9329-8427968536b7"
                                      },
                                      "type": "Compose",
                                      "inputs": "@if(\n  contains(outputs('Compose:_Tool_Record')?['data'], 'flowId: '),\n  trim(replace(replace(split(split(outputs('Compose:_Tool_Record')?['data'], 'flowId:')[1], 'outputMode:')[0], '\\r\\n', ''), '\\n', '')),\n  null\n)"
                                    },
                                    "Condition:_Check_For_Flow_Id": {
                                      "actions": {
                                        "Get_a_row_by_ID_from_selected_environment:_Get_Flow_Name": {
                                          "runAfter": {},
                                          "metadata": {
                                            "operationMetadataId": "75a170d9-4e43-461b-a021-31cc0fda9616"
                                          },
                                          "type": "OpenApiConnection",
                                          "inputs": {
                                            "host": {
                                              "connectionName": "shared_commondataserviceforapps",
                                              "operationId": "GetItemWithOrganization",
                                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                            },
                                            "parameters": {
                                              "organization": "@outputs('Get_Copilot_Configuration')?['body/cat_dataverseurl']",
                                              "entityName": "workflows",
                                              "recordId": "@outputs('Compose:_Flow_Id')",
                                              "$select": "name"
                                            },
                                            "authentication": {
                                              "type": "Raw",
                                              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                                            }
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        "Compose:_Flow_Id": [
                                          "Succeeded"
                                        ]
                                      },
                                      "expression": {
                                        "not": {
                                          "equals": [
                                            "@outputs('Compose:_Flow_Id')",
                                            "@null"
                                          ]
                                        }
                                      },
                                      "metadata": {
                                        "operationMetadataId": "bba9005b-f7f4-4ffb-830d-c323fd16a13b"
                                      },
                                      "type": "If"
                                    },
                                    "Append_to_array_variable:_TranscriptToolsArray_for_Flow_Name": {
                                      "runAfter": {
                                        "Condition:_Check_For_Flow_Id": [
                                          "Succeeded"
                                        ]
                                      },
                                      "metadata": {
                                        "operationMetadataId": "68556bba-8775-48a1-a3f8-7e239d4f045b"
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "TranscriptToolsArray",
                                        "value": "@if( not(equals(outputs('Compose:_Tool_Name'), null)),\r\n\toutputs('Compose:_Tool_Name'),\r\n\tif( not(equals(outputs('Compose:_Flow_Id'), null)),\r\n\t\toutputs('Get_a_row_by_ID_from_selected_environment:_Get_Flow_Name')?['body/name'],\r\n\t\toutputs('Compose:_Tool_Record')['name']\r\n\t)\t\r\n)"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Filter_array:_Transcript_Tool_Metadata": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "greater": [
                                      "@length(body('Filter_array:_Transcript_Tool_Metadata'))",
                                      0
                                    ]
                                  },
                                  "metadata": {
                                    "operationMetadataId": "91f97813-4f24-47c5-b860-dccc0be6d171"
                                  },
                                  "type": "If"
                                }
                              },
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "52287934-233c-47ae-8a2a-b113b93256ba"
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {
                            "Filter_array:_DynamicPlanReceived": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "3a43c1e6-a6a3-40aa-8101-eb5683fe52c9"
                          },
                          "type": "Foreach"
                        },
                        "Compose:_Intersection_of_Transcript_Tools_Array_and_Expected_Tools_Array": {
                          "runAfter": {
                            "Apply_to_each:_DynamicPlanReceived": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "874170ab-608e-41bf-92f9-b863efe7107c"
                          },
                          "type": "Compose",
                          "inputs": "@intersection(variables('TranscriptToolsArray'), body('Select:_Trim_extra_spaces_for_ExpectedToolsArray'))"
                        },
                        "Compose:_Actual_Tools_Ratio": {
                          "runAfter": {
                            "Compose:_Intersection_of_Transcript_Tools_Array_and_Expected_Tools_Array": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "63a84fc5-48c9-41ae-b034-b447863e29d3"
                          },
                          "type": "Compose",
                          "inputs": "@if(\r\n  equals(length(body('Select:_Trim_extra_spaces_for_ExpectedToolsArray')), 0),\r\n  0,\r\n  div(\r\n    mul(\r\n      length(outputs('Compose:_Intersection_of_Transcript_Tools_Array_and_Expected_Tools_Array')),\r\n      100\r\n    ),\r\n    length(body('Select:_Trim_extra_spaces_for_ExpectedToolsArray'))\r\n  )\r\n)"
                        },
                        "Update_Copilot_Test_Result": {
                          "runAfter": {
                            "Compose:_Actual_Tools_Ratio": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "15aaca7b-99dd-469b-99b8-9eae5e9e7a11"
                          },
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "connectionName": "shared_commondataserviceforapps",
                              "operationId": "UpdateRecord",
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                            },
                            "parameters": {
                              "entityName": "cat_copilottestresults",
                              "recordId": "@items('Apply_to_each:_Test_Result')?['cat_copilottestresultid']",
                              "item/cat_resultcode": "@if( greaterOrEquals(outputs('Compose:_Actual_Tools_Ratio'), items('Apply_to_each:_Test_Result')?['cat_copilottestid/cat_passthreshold']),\r\n\t1,\r\n\t2\r\n)",
                              "item/cat_actualtools": "@join(variables('TranscriptToolsArray'), ',')",
                              "item/cat_resultreason": "@if( greaterOrEquals(outputs('Compose:_Actual_Tools_Ratio'), items('Apply_to_each:_Test_Result')?['cat_copilottestid/cat_passthreshold']),\r\n\tconcat('Pass threshold was met(', outputs('Compose:_Actual_Tools_Ratio'), '/', items('Apply_to_each:_Test_Result')?['cat_copilottestid/cat_passthreshold'], ').'),\r\n\tconcat('Pass threshold was not met(', outputs('Compose:_Actual_Tools_Ratio'), '/', items('Apply_to_each:_Test_Result')?['cat_copilottestid/cat_passthreshold'], ').')\r\n)"
                            },
                            "authentication": {
                              "type": "Raw",
                              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                            }
                          }
                        },
                        "Set_variable:_TranscriptToolsArray": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "a33a11c5-125e-4b4e-ad89-af416f9779c3"
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "TranscriptToolsArray",
                            "value": []
                          }
                        },
                        "Compose:_ExpectedToolsArray": {
                          "runAfter": {
                            "Set_variable:_TranscriptToolsArray": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "997208ad-fcf0-4199-b2d5-6855a912f8ec"
                          },
                          "type": "Compose",
                          "inputs": "@split(items('Apply_to_each:_Test_Result')?['cat_CopilotTestId']?['cat_expectedtools'], ',')"
                        },
                        "Filter_array:_non-empty_values": {
                          "runAfter": {
                            "Compose:_ExpectedToolsArray": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "1b9da81f-c852-4393-ba00-a74ce060b240"
                          },
                          "type": "Query",
                          "inputs": {
                            "from": "@outputs('Compose:_ExpectedToolsArray')",
                            "where": "@not(equals(item(), ''))"
                          }
                        }
                      },
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "1de1d3a7-5db1-40c2-b40c-cb16bf4d52cd"
                      },
                      "type": "Scope"
                    }
                  },
                  "runAfter": {
                    "Parse_JSON:_Conversation_Transcript": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Apply_to_each:_Child_Agent_Test_Results": {
                        "foreach": "@outputs('List_rows:_Get_Child_Test_Results')?['body/value']",
                        "actions": {
                          "Condition:_Check_to_continue_Multiturn_processing": {
                            "actions": {
                              "Condition:_Check_for_Critical_Tests": {
                                "actions": {
                                  "Set_variable:_MultiTurnPendingResult": {
                                    "runAfter": {
                                      "Set_variable:_ContinueMultiTurnProcessing": [
                                        "Succeeded"
                                      ]
                                    },
                                    "metadata": {
                                      "operationMetadataId": "b94a866c-fad9-420a-9d00-dccd476cd217"
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "MultiturnPendingResult",
                                      "value": "@if(or(equals(variables('MultiturnResult'), 2), equals(variables('MultiturnResult'), 3), equals(variables('MultiturnResult'), 4)), false, if(equals(variables('MultiturnResult'), 5), true, false))"
                                    }
                                  },
                                  "Set_variable:_MultiTurnResult_Agent_Plans": {
                                    "runAfter": {},
                                    "metadata": {
                                      "operationMetadataId": "de1eb8f4-e6e9-4e0a-9ad3-d844c1f73367"
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "MultiturnResult",
                                      "value": "@if(greaterOrEquals(outputs('Compose:_Actual_Tools_Ratio_Multiturn'), items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_passthreshold']), 1, 2)"
                                    }
                                  },
                                  "Set_variable:_ContinueMultiTurnProcessing": {
                                    "runAfter": {
                                      "Set_variable:_MultiTurnResult_Agent_Plans": [
                                        "Succeeded"
                                      ]
                                    },
                                    "metadata": {
                                      "operationMetadataId": "b0b2871c-d906-45e3-a3b8-b6febd5af8d1"
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "ContinueMultiturnProcessing",
                                      "value": "@if(or(equals(variables('MultiturnResult'), 2), equals(variables('MultiturnResult'), 3), equals(variables('MultiturnResult'), 4)), false, true)"
                                    }
                                  }
                                },
                                "runAfter": {
                                  "Update_Copilot_Test_Result_Multiturn": [
                                    "Succeeded"
                                  ]
                                },
                                "expression": {
                                  "equals": [
                                    "@items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_critical']",
                                    "@true"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "724a24dc-dd7c-44fb-a5ef-4a7358f99bd9"
                                },
                                "type": "If"
                              },
                              "Filter_array:_Next_Element": {
                                "runAfter": {
                                  "Filter_array:_Current_Element": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "ed6a5780-1c6b-4387-9723-567821671e70"
                                },
                                "type": "Query",
                                "inputs": {
                                  "from": "@body('Select:_Add_index_property')",
                                  "where": "@and(equals(item()?['activity']?['type'], 'message'), equals(item()?['activity']?['from']?['role'], 1), greater(item()?['index'], first(body('Filter_array:_Current_Element'))?['index']))"
                                }
                              },
                              "Filter_array:_FinalArray": {
                                "runAfter": {
                                  "Filter_array:_Next_Element": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "c1842a0f-c6a2-4e98-9012-9eb8e2f1aaa3"
                                },
                                "type": "Query",
                                "inputs": {
                                  "from": "@body('Select:_Add_index_property')",
                                  "where": "@if(empty(body('Filter_array:_Next_Element')), greaterOrEquals(item()?['index'], first(body('Filter_array:_Current_Element'))?['index']), and(greaterOrEquals(item()?['index'], first(body('Filter_array:_Current_Element'))?['index']), less(item()?['index'], first(body('Filter_array:_Next_Element'))?['index'])))"
                                }
                              },
                              "Compose:_ExpectedToolsArray_Multiturn": {
                                "runAfter": {
                                  "Filter_array:_FinalArray": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "997208ad-fcf0-4199-b2d5-6855a912f8ec"
                                },
                                "type": "Compose",
                                "inputs": "@split(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_CopilotTestId']?['cat_expectedtools'], ',')"
                              },
                              "Select:_Trim_extra_spaces_for_ExpectedToolsArray_Multiturn": {
                                "runAfter": {
                                  "Compose:_ExpectedToolsArray_Multiturn": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "b3131644-247e-4326-8950-d951e2e84bfc"
                                },
                                "type": "Select",
                                "inputs": {
                                  "from": "@outputs('Compose:_ExpectedToolsArray_Multiturn')",
                                  "select": "@trim(item())"
                                }
                              },
                              "Filter_array:_DynamicPlanReceived_Multiturn": {
                                "runAfter": {
                                  "Select:_Trim_extra_spaces_for_ExpectedToolsArray_Multiturn": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "1e833c23-631a-4cd7-952f-8a29fb31ad29"
                                },
                                "type": "Query",
                                "inputs": {
                                  "from": "@body('Filter_array:_FinalArray')",
                                  "where": "@equals(item()?['activity']?['valueType'], 'DynamicPlanReceived')"
                                }
                              },
                              "Apply_to_each:_DynamicPlanReceived_Multitun": {
                                "foreach": "@body('Filter_array:_DynamicPlanReceived_Multiturn')",
                                "actions": {
                                  "Apply_to_each:_Steps_Multiturn": {
                                    "foreach": "@items('Apply_to_each:_DynamicPlanReceived_Multitun')?['activity']?['value']?['steps']",
                                    "actions": {
                                      "Filter_array:_Transcript_Tool_Metadata_Multiturn": {
                                        "runAfter": {},
                                        "metadata": {
                                          "operationMetadataId": "acccc4e5-728b-4012-993e-9c1fda768534"
                                        },
                                        "type": "Query",
                                        "inputs": {
                                          "from": "@outputs('List_rows_from_selected_environment:_Read_Agent_Bot_Components')?['body/value']",
                                          "where": "@equals(item()?['schemaname'], items('Apply_to_each:_Steps_Multiturn'))"
                                        }
                                      },
                                      "Condition:_Check_for_Valid_Tools_Multiturn": {
                                        "actions": {
                                          "Compose:_Tool_Record_Multiturn": {
                                            "runAfter": {},
                                            "metadata": {
                                              "operationMetadataId": "547e88b6-3c81-4b90-b023-5a26bde62765"
                                            },
                                            "type": "Compose",
                                            "inputs": "@first(body('Filter_array:_Transcript_Tool_Metadata_Multiturn'))"
                                          },
                                          "Compose:_Tool_Name_Multiturn": {
                                            "runAfter": {
                                              "Compose:_Tool_Record_Multiturn": [
                                                "Succeeded"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "edbfef32-7740-4046-80e9-e7eb48d2fd96"
                                            },
                                            "type": "Compose",
                                            "inputs": "@if(\n  contains(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'modelDisplayName: '),\n  trim(\n    replace(\n      replace(\n        coalesce(\n          if(contains(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'modelDescription:'), split(split(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'modelDisplayName:')[1], 'modelDescription:')[0], null),\n          if(contains(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'outputs:'), split(split(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'modelDisplayName:')[1], 'outputs:')[0], null),\n          if(contains(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'action:'), split(split(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'modelDisplayName:')[1], 'action:')[0], null),\n          split(split(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'modelDisplayName:')[1], '\\r\\n')[0]\n        ),\n        '\\r\\n', ''\n      ),\n      '\\n', ''\n    )\n  ),\n  null\n)"
                                          },
                                          "Compose:_Flow_Id_Multiturn": {
                                            "runAfter": {
                                              "Compose:_Tool_Name_Multiturn": [
                                                "Succeeded"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "28b8c5f2-c0f6-43e4-9329-8427968536b7"
                                            },
                                            "type": "Compose",
                                            "inputs": "@if(\n  contains(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'flowId: '),\n  trim(replace(replace(split(split(outputs('Compose:_Tool_Record_Multiturn')?['data'], 'flowId:')[1], 'outputMode:')[0], '\\r\\n', ''), '\\n', '')),\n  null\n)"
                                          },
                                          "Append_to_array_variable:_TranscriptToolsArray_for_Flow_Name_Multiturn": {
                                            "runAfter": {
                                              "Compose:_Get_Flow_Name_Failed": [
                                                "Succeeded",
                                                "Skipped",
                                                "Failed",
                                                "TimedOut"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "68556bba-8775-48a1-a3f8-7e239d4f045b"
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                              "name": "TranscriptToolsArray",
                                              "value": "@if( not(equals(outputs('Compose:_Tool_Name_Multiturn'), null)),\n\toutputs('Compose:_Tool_Name_Multiturn'),\n\tif( not(equals(outputs('Compose:_Get_Flow_Name_Failed'), null)),\n\t\toutputs('Get_a_row_by_ID_from_selected_environment:_Get_Flow_Name_Multiturn')?['body/name'],\n\t\toutputs('Compose:_Tool_Record_Multiturn')['name']\n\t)\t\n)"
                                            }
                                          },
                                          "Get_a_row_by_ID_from_selected_environment:_Get_Flow_Name_Multiturn": {
                                            "runAfter": {
                                              "Compose:_Flow_Id_Multiturn": [
                                                "Succeeded"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "75a170d9-4e43-461b-a021-31cc0fda9616"
                                            },
                                            "type": "OpenApiConnection",
                                            "inputs": {
                                              "host": {
                                                "connectionName": "shared_commondataserviceforapps",
                                                "operationId": "GetItemWithOrganization",
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                              },
                                              "parameters": {
                                                "organization": "@outputs('Get_Copilot_Configuration')?['body/cat_dataverseurl']",
                                                "entityName": "workflows",
                                                "recordId": "@outputs('Compose:_Flow_Id_Multiturn')",
                                                "$select": "name"
                                              },
                                              "authentication": {
                                                "type": "Raw",
                                                "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                                              }
                                            }
                                          },
                                          "Compose:_Get_Flow_Name_Failed": {
                                            "runAfter": {
                                              "Get_a_row_by_ID_from_selected_environment:_Get_Flow_Name_Multiturn": [
                                                "Failed"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "df85816e-5724-4160-89a2-4a349e3b0c6e"
                                            },
                                            "type": "Compose",
                                            "inputs": "@null"
                                          }
                                        },
                                        "runAfter": {
                                          "Filter_array:_Transcript_Tool_Metadata_Multiturn": [
                                            "Succeeded"
                                          ]
                                        },
                                        "expression": {
                                          "greater": [
                                            "@length(body('Filter_array:_Transcript_Tool_Metadata_Multiturn'))",
                                            0
                                          ]
                                        },
                                        "metadata": {
                                          "operationMetadataId": "91f97813-4f24-47c5-b860-dccc0be6d171"
                                        },
                                        "type": "If"
                                      }
                                    },
                                    "runAfter": {},
                                    "metadata": {
                                      "operationMetadataId": "52287934-233c-47ae-8a2a-b113b93256ba"
                                    },
                                    "type": "Foreach"
                                  }
                                },
                                "runAfter": {
                                  "Filter_array:_DynamicPlanReceived_Multiturn": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "3a43c1e6-a6a3-40aa-8101-eb5683fe52c9"
                                },
                                "type": "Foreach"
                              },
                              "Compose:_Intersection_of_Transcript_and_Expected_Tools_Array_Multiturn": {
                                "runAfter": {
                                  "Apply_to_each:_DynamicPlanReceived_Multitun": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "874170ab-608e-41bf-92f9-b863efe7107c"
                                },
                                "type": "Compose",
                                "inputs": "@intersection(variables('TranscriptToolsArray'), body('Select:_Trim_extra_spaces_for_ExpectedToolsArray_Multiturn'))"
                              },
                              "Compose:_Actual_Tools_Ratio_Multiturn": {
                                "runAfter": {
                                  "Compose:_Intersection_of_Transcript_and_Expected_Tools_Array_Multiturn": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "63a84fc5-48c9-41ae-b034-b447863e29d3"
                                },
                                "type": "Compose",
                                "inputs": "@if( equals(length(body('Select:_Trim_extra_spaces_for_ExpectedToolsArray_Multiturn')), 0), \r\n\t0, \r\n\tdiv( \r\n\t\tmul(length(outputs('Compose:_Intersection_of_Transcript_and_Expected_Tools_Array_Multiturn')), 100), \r\n\t\tlength(body('Select:_Trim_extra_spaces_for_ExpectedToolsArray_Multiturn'))\r\n\t)\r\n)"
                              },
                              "Update_Copilot_Test_Result_Multiturn": {
                                "runAfter": {
                                  "Compose:_Actual_Tools_Ratio_Multiturn": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "15aaca7b-99dd-469b-99b8-9eae5e9e7a11"
                                },
                                "type": "OpenApiConnection",
                                "inputs": {
                                  "host": {
                                    "connectionName": "shared_commondataserviceforapps",
                                    "operationId": "UpdateRecord",
                                    "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                  },
                                  "parameters": {
                                    "entityName": "cat_copilottestresults",
                                    "recordId": "@items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestresultid']",
                                    "item/cat_resultcode": "@if(greaterOrEquals(outputs('Compose:_Actual_Tools_Ratio_Multiturn'), items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_passthreshold']), 1, 2)",
                                    "item/cat_actualtools": "@join(variables('TranscriptToolsArray'), ',')",
                                    "item/cat_resultreason": "@if( greaterOrEquals(outputs('Compose:_Actual_Tools_Ratio_Multiturn'), items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_passthreshold']), \r\n\tconcat('Pass threshold was met(', outputs('Compose:_Actual_Tools_Ratio_Multiturn'), '/', items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_passthreshold'], ').'), \r\n\tconcat('Pass threshold was not met(', outputs('Compose:_Actual_Tools_Ratio_Multiturn'), '/', items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_passthreshold'], ').')\r\n)"
                                  },
                                  "authentication": {
                                    "type": "Raw",
                                    "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                                  }
                                }
                              },
                              "Set_variable:_TranscriptToolsArray_Multiturn": {
                                "runAfter": {},
                                "metadata": {
                                  "operationMetadataId": "f76f4257-2c8e-4773-81fb-49e2f9a38aff"
                                },
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "TranscriptToolsArray",
                                  "value": []
                                }
                              },
                              "Filter_array:_Current_Element": {
                                "runAfter": {
                                  "Set_variable:_TranscriptToolsArray_Multiturn": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "91e588f6-5815-4ba6-b79a-daa2015b561c"
                                },
                                "type": "Query",
                                "inputs": {
                                  "from": "@body('Select:_Add_index_property')",
                                  "where": "@and(equals(item()?['activity']?['type'], 'message'), equals(item()?['activity']?['from']?['role'], 1), equals(item()?['activity']?['text'], items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_testutterance']))"
                                }
                              }
                            },
                            "runAfter": {},
                            "expression": {
                              "equals": [
                                "@variables('ContinueMultiturnProcessing')",
                                "@true"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "53b8da92-5a51-4906-87bb-35bd2c921458"
                            },
                            "type": "If"
                          }
                        },
                        "runAfter": {
                          "Select:_Add_index_property": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "ca50bdaa-b1c1-4258-808f-d1e050ca7df1"
                        },
                        "type": "Foreach"
                      },
                      "Select:_Add_index_property": {
                        "runAfter": {
                          "List_rows:_Get_Child_Test_Results": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "108dcba5-4d56-47ff-9825-64f3b02cfb59"
                        },
                        "type": "Select",
                        "inputs": {
                          "from": "@range(1, length(body('Parse_JSON:_Conversation_Transcript')?['activities']))",
                          "select": {
                            "index": "@item()",
                            "activity": "@body('Parse_JSON:_Conversation_Transcript')?['activities']?[item()]"
                          }
                        }
                      },
                      "List_rows:_Get_Child_Test_Results": {
                        "runAfter": {
                          "Set_variable:_MultiturnPendingResult_for_each_Multiturn_test": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "025bb9de-a9e8-4e24-846f-4db3caed4627"
                        },
                        "type": "OpenApiConnection",
                        "inputs": {
                          "host": {
                            "connectionName": "shared_commondataserviceforapps",
                            "operationId": "ListRecords",
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                          },
                          "parameters": {
                            "entityName": "cat_copilottestresults",
                            "$select": "cat_name, cat_copilottestresultid, cat_response, cat_resultcode, cat_resultreason",
                            "$filter": "_cat_copilottestrunid_value eq '@{triggerBody()['text_1']}'  \nand statecode eq 0 \nand cat_resultcode ne 4 \nand cat_CopilotTestId/cat_testtypecode eq 6\nand _cat_parent_value eq '@{items('Apply_to_each:_Test_Result')?['cat_copilottestresultid']}'",
                            "$orderby": "createdon asc",
                            "$expand": "cat_CopilotTestId($select=cat_testtypecode, cat_expectedtools,cat_passthreshold,cat_testutterance, cat_critical)"
                          },
                          "authentication": {
                            "type": "Raw",
                            "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                          },
                          "retryPolicy": {
                            "type": "none"
                          }
                        }
                      },
                      "Set_variable:_MultiturnPendingResult_for_each_Multiturn_test": {
                        "runAfter": {
                          "Set_variable:_ContinueMultiturnProcessing_for_each_Multiturn_test": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "d8358c9c-8455-466d-a062-c930c4f558cf"
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "MultiturnPendingResult",
                          "value": "@false"
                        }
                      },
                      "Set_variable:_ContinueMultiturnProcessing_for_each_Multiturn_test": {
                        "runAfter": {},
                        "metadata": {
                          "operationMetadataId": "fba16fea-00ef-4938-8df0-4930e0cf192a"
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "ContinueMultiturnProcessing",
                          "value": "@true"
                        }
                      },
                      "Update_a_row:_Parent_Multiturn_Agent_Test_Result": {
                        "runAfter": {
                          "Compose": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "64b99d18-70b3-4cc7-9c2d-63edd12136c7"
                        },
                        "type": "OpenApiConnection",
                        "inputs": {
                          "host": {
                            "connectionName": "shared_commondataserviceforapps",
                            "operationId": "UpdateOnlyRecord",
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                          },
                          "parameters": {
                            "entityName": "cat_copilottestresults",
                            "recordId": "@items('Apply_to_each:_Test_Result')?['cat_copilottestresultid']",
                            "item/cat_resultcode": "@if( greater(length(outputs('List_rows:_Get_Child_Test_Results')?['body/value']), 0), \r\n\tif(variables('MultiturnPendingResult'), \r\n\t\t5, \r\n\t\tif(greater(variables('MultiturnResult'), 0), \r\n\t\t\tvariables('MultiturnResult'), \r\n\t\t\titems('Apply_to_each:_Test_Result')?['cat_resultcode']\r\n\t\t)\r\n\t), \r\n\titems('Apply_to_each:_Test_Result')?['cat_resultcode']\r\n)"
                          },
                          "authentication": {
                            "type": "Raw",
                            "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                          }
                        }
                      },
                      "Compose": {
                        "runAfter": {
                          "Apply_to_each:_Child_Agent_Test_Results": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "9bbd5a9a-db3a-4531-93f4-0d10c8357c69"
                        },
                        "type": "Compose",
                        "inputs": "@{greater(length(outputs('List_rows:_Get_Child_Test_Results')?['body/value']), 0)}\n\n@{items('Apply_to_each:_Test_Result')?['cat_resultcode']}\n\n@{if( greater(length(outputs('List_rows:_Get_Child_Test_Results')?['body/value']), 0), \r\n\tif(variables('MultiturnPendingResult'), \r\n\t\t5, \r\n\t\tif(greater(variables('MultiturnResult'), 0), \r\n\t\t\tvariables('MultiturnResult'), \r\n\t\t\titems('Apply_to_each:_Test_Result')?['cat_resultcode']\r\n\t\t)\r\n\t), \r\n\titems('Apply_to_each:_Test_Result')?['cat_resultcode']\r\n)}"
                      }
                    }
                  },
                  "expression": {
                    "not": {
                      "equals": [
                        "@items('Apply_to_each:_Test_Result')?['cat_copilottestid/cat_testtypecode']",
                        5
                      ]
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "fc6687a2-61a0-4a2c-b306-c70a828b9fcf"
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "List_rows_from_selected_environment:_Get_Conversation_Transcripts": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Update_Copilot_Test_Result_-_Missing_Transcript": {
                    "runAfter": {},
                    "metadata": {
                      "operationMetadataId": "15aaca7b-99dd-469b-99b8-9eae5e9e7a11"
                    },
                    "type": "OpenApiConnection",
                    "inputs": {
                      "host": {
                        "connectionName": "shared_commondataserviceforapps",
                        "operationId": "UpdateRecord",
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                      },
                      "parameters": {
                        "entityName": "cat_copilottestresults",
                        "recordId": "@items('Apply_to_each:_Test_Result')?['cat_copilottestresultid']",
                        "item/cat_name": "@items('Apply_to_each:_Test_Result')?['cat_name']",
                        "item/cat_resultcode": "@if(\r\n    equals(\r\n        items('Apply_to_each:_Test_Result')?['cat_resultcode'], \r\n        5\r\n    ), \r\n    4, \r\n    items('Apply_to_each:_Test_Result')?['cat_resultcode']\r\n)",
                        "item/cat_resultreason": "@if(\n    equals(\n        items('Apply_to_each:_Test_Result')?['cat_resultcode'], \n        5\n    ), \n    'Conversation Transcript could not be retrieved', \n    items('Apply_to_each:_Test_Result')?['cat_resultcode']\n)"
                      },
                      "authentication": {
                        "type": "Raw",
                        "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                      }
                    }
                  }
                }
              },
              "expression": {
                "equals": [
                  "@not(empty(outputs('List_rows_from_selected_environment:_Get_Conversation_Transcripts')?['body/value']))",
                  true
                ]
              },
              "metadata": {
                "operationMetadataId": "ff1b91a3-8dab-4853-a8d3-9ab64088a325"
              },
              "type": "If"
            }
          },
          "runAfter": {
            "Get_Copilot_Test_Results": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5f5615a1-8194-4558-a57d-b5c2fe962dfb"
          },
          "type": "Foreach"
        },
        "Get_Copilot_Test_Results": {
          "runAfter": {
            "List_rows_from_selected_environment:_Read_Agent_Bot_Components": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "6076da45-72f2-4ca7-bc39-244924e64238"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "ListRecords",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cat_copilottestresults",
              "$select": "cat_name, cat_copilottestresultid, cat_response, cat_resultcode, cat_resultreason",
              "$filter": "_cat_copilottestrunid_value eq '@{triggerBody()['text_1']}'  \nand statecode eq 0 \nand cat_resultcode ne 2 and cat_resultcode ne 3 and cat_resultcode ne 4\nand (cat_CopilotTestId/cat_testtypecode eq 6 or cat_CopilotTestId/cat_testtypecode eq 5) \nand _cat_parent_value eq null",
              "$orderby": "createdon asc",
              "$expand": "cat_CopilotTestId($select=cat_testtypecode,cat_expectedtools,cat_passthreshold)"
            },
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            }
          }
        },
        "Initialize_variable:_TranscriptToolsArray": {
          "runAfter": {
            "Respond_to_a_Power_App_or_flow": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a7afe0d1-507c-46b8-9553-e93a912526da"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "TranscriptToolsArray",
                "type": "array",
                "value": []
              }
            ]
          }
        },
        "List_rows_from_selected_environment:_Read_Agent_Bot_Components": {
          "runAfter": {
            "Check_Agent_Id": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "4d1b2b79-2339-49ae-88cc-52cfccd1bf5e"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps_1",
              "operationId": "ListRecordsWithOrganization",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "organization": "@outputs('Get_Copilot_Configuration')?['body/cat_dataverseurl']",
              "entityName": "botcomponents",
              "$select": "name, schemaname, data",
              "$filter": "_parentbotid_value eq '@{outputs('Get_Copilot_Configuration')?['body/cat_copilotid']}'"
            },
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            }
          }
        },
        "Initialize_variable:_ContinueMultiturnProcessing": {
          "runAfter": {
            "Initialize_variable:_TranscriptToolsArray": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "bfa823e7-3504-432e-990e-589d29149f0b"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ContinueMultiturnProcessing",
                "type": "boolean"
              }
            ]
          }
        },
        "Initialize_variable:_MultiturnResult": {
          "runAfter": {
            "Initialize_variable:_ContinueMultiturnProcessing": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a3125a46-5313-4d02-bbfb-057eceb6cd97"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "MultiturnResult",
                "type": "integer",
                "value": 0
              }
            ]
          }
        },
        "Get_Flow_Endpoint": {
          "runAfter": {
            "Initialize_variable:_MultiturnPendingResult": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "8f498882-4850-4987-8f29-db3f3fcb904f"
          },
          "type": "Compose",
          "inputs": "@if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'gcc'), 'https://make.gov.powerautomate.us/', if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'gcc(high)'), 'https://make.high.powerautomate.us/', if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'dod'), 'https://make.powerautomate.appsplatform.us/', 'https://make.powerautomate.com/')))"
        },
        "Update_Copilot_Test_Run:_Error": {
          "runAfter": {
            "Apply_to_each:_Test_Result": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "b3db844b-bc92-4bd3-9d3e-8faf99619c22"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "UpdateRecord",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cat_copilottestruns",
              "recordId": "@triggerBody()['text_1']",
              "item/cat_dataverseenrichmentstatuscode": 6,
              "item/cat_errordetails": "@concat(\n  body('Update_Copilot_Test_Run:_Running')?['cat_errordetails'],\n  '<br/>',\n  'Failed <strong>',\n  workflow()?['tags']?['flowDisplayName'],\n  '</strong> flow run: <a href=\"',\n  outputs('Get_Flow_Endpoint'),\n  'environments/',\n  workflow()?['tags']?['environmentName'],\n  '/solutions/fd140aaf-4df4-11dd-bd17-0019b9312238/flows/',\n  workflow()?['name'],\n  '/runs/',\n  workflow()?['run']?['name'],\n  '\" target=\"_blank\" rel=\"noopener noreferrer\">Click here to open the flow run</a>'\n)\n"
            },
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            }
          }
        },
        "Perform_a_bound_action:_Update_Rollup_Columns": {
          "runAfter": {
            "Apply_to_each:_Test_Result": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "b7372c79-e753-42a3-b135-93416554f78c"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "PerformBoundAction",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cat_copilottestruns",
              "actionName": "Microsoft.Dynamics.CRM.cat_RunRollupColumnsUpdates",
              "recordId": "@triggerBody()['text_1']",
              "item/DataverseUriHost": "@uriHost(outputs('Get_Copilot_Configuration')?['body/@odata.id'])",
              "item/CopilotTestRunId": "@triggerBody()['text_1']"
            },
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            }
          }
        },
        "Initialize_variable:_MultiturnPendingResult": {
          "runAfter": {
            "Initialize_variable:_MultiturnResult": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "cd2678c6-278c-4208-b809-513e48fa9363"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "MultiturnPendingResult",
                "type": "boolean"
              }
            ]
          }
        },
        "Update_Copilot_Test_Run:_Complete": {
          "runAfter": {
            "Perform_a_bound_action:_Update_Rollup_Columns": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "b3db844b-bc92-4bd3-9d3e-8faf99619c22"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "UpdateRecord",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cat_copilottestruns",
              "recordId": "@triggerBody()['text_1']",
              "item/cat_dataverseenrichmentstatuscode": 3,
              "item/cat_errordetails": "@concat(\n  outputs('Update_Copilot_Test_Run:_Running')?['body/cat_errordetails'],\n  '<br/>',\n  '<strong>',\n  workflow()?['tags']?['flowDisplayName'],\n  '</strong> flow run: <a href=\"',\n  outputs('Get_Flow_Endpoint'),\n  'environments/',\n  workflow()?['tags']?['environmentName'],\n  '/solutions/fd140aaf-4df4-11dd-bd17-0019b9312238/flows/',\n  workflow()?['name'],\n  '/runs/',\n  workflow()?['run']?['name'],\n  '\" target=\"_blank\" rel=\"noopener noreferrer\">Click here to open the flow run</a>'\n)"
            },
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            }
          }
        },
        "Respond_to_a_Power_App_or_flow": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "ffd2f8a6-7320-46a7-aaa5-b76938318ae2"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "statusCode": 200,
            "body": {
              "response": "Returning early response."
            },
            "schema": {
              "type": "object",
              "properties": {
                "response": {
                  "title": "Response",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              }
            }
          }
        },
        "Check_Agent_Id": {
          "actions": {
            "Terminate": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "b4145642-c6ac-4415-ae4e-d7e9e995de3c"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "AGENT_ERROR",
                  "message": "Agent Id is required for Plan Validation."
                }
              }
            },
            "Update_Copilot_Test_Run:_Agent_Id_Required": {
              "runAfter": {
                "Terminate": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "b3db844b-bc92-4bd3-9d3e-8faf99619c22"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "cat_copilottestruns",
                  "recordId": "@triggerBody()['text_1']",
                  "item/cat_dataverseenrichmentstatuscode": 6,
                  "item/cat_errordetails": "@concat(\n  outputs('Update_Copilot_Test_Run:_Running')?['body/cat_errordetails'],\n  '<br/>',\n  '<strong>',\n  workflow()?['tags']?['flowDisplayName'],\n  '</strong> flow run: <a href=\"',\n  outputs('Get_Flow_Endpoint'),\n  'environments/',\n  workflow()?['tags']?['environmentName'],\n  '/solutions/fd140aaf-4df4-11dd-bd17-0019b9312238/flows/',\n  workflow()?['name'],\n  '/runs/',\n  workflow()?['run']?['name'],\n  '\" target=\"_blank\" rel=\"noopener noreferrer\">Click here to open the flow run</a>'\n)"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            }
          },
          "runAfter": {
            "Get_Copilot_Configuration": [
              "Succeeded"
            ]
          },
          "expression": {
            "and": [
              {
                "equals": [
                  "@empty(outputs('Get_Copilot_Configuration')?['body/cat_copilotid'])",
                  "@true"
                ]
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "047e56da-6ec8-4aa9-836e-a0a9f320c4ef"
          },
          "type": "If"
        },
        "Update_Copilot_Test_Run:_Running": {
          "runAfter": {
            "Get_Flow_Endpoint": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "21161f7d-523c-4f20-9512-5bee0d756282"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "UpdateRecord",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cat_copilottestruns",
              "recordId": "@triggerBody()['text_1']",
              "item/cat_dataverseenrichmentstatuscode": 2
            },
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            }
          }
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}