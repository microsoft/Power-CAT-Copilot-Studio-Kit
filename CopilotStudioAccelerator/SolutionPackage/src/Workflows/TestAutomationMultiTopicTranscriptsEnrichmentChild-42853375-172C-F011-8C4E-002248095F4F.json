{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "cat_CopilotStudioAcceleratorDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "3de968b8-50a6-4fa8-9653-c88edc3ed059"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "Content",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Conversation Transcript Element",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "MetaData",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Conversation Transcript MetaData",
                  "x-ms-content-hint": "TEXT"
                },
                "text_2": {
                  "title": "UserTopics",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Testcase Topics",
                  "x-ms-content-hint": "TEXT"
                },
                "text_3": {
                  "title": "DataverseUrl",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2",
                "text_3"
              ]
            },
            "headersSchema": {
              "x-ms-user-name-encoded": {
                "title": "User name",
                "type": "string",
                "format": "byte",
                "x-ms-dynamically-added": false
              }
            }
          }
        }
      },
      "actions": {
        "Scope:_Try": {
          "actions": {
            "Parse_JSON:_DynamicPlanReceived_Content": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "7479b712-aa61-469d-9af7-229a57634056"
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()['text']",
                "schema": {
                  "type": "object",
                  "properties": {
                    "valueType": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "from": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "role": {
                          "type": "integer"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "channelId": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array"
                    },
                    "replyToId": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isFinalPlan": {
                          "type": "boolean"
                        },
                        "planIdentifier": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "Compose:_Get_Topic_Names_From_Transcript": {
              "runAfter": {
                "Parse_JSON:_DynamicPlanReceived_Content": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "54f94bb2-9992-4fb7-bed6-03dc54b3bf8c"
              },
              "type": "Compose",
              "inputs": "@body('Parse_JSON:_DynamicPlanReceived_Content')?['value']?['steps']"
            },
            "Parse_JSON:_Transcript_MetaData": {
              "runAfter": {
                "Compose:_Get_Topic_Names_From_Transcript": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "4d139659-4f7c-4c89-a5ae-033906e4eccb"
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()['text_1']",
                "schema": {
                  "type": "object",
                  "properties": {
                    "BotId": {
                      "type": "string"
                    },
                    "AADTenantId": {
                      "type": "string"
                    },
                    "BotName": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "Condition:_Check_if_Topic_names_are_present": {
              "actions": {
                "Compose:_Create_OData_Expression": {
                  "runAfter": {
                    "Join:_Create_OData_Expression": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c78e1eab-c5e4-41f8-971f-b3d8ad6355da"
                  },
                  "type": "Compose",
                  "inputs": "@concat('name eq ', '''', body('Join:_Create_OData_Expression'), '''')"
                },
                "List_rows_from_selected_environment:_Get_Schema_Names_for_User_Topics": {
                  "runAfter": {
                    "Compose:_Create_OData_Expression": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "d4abf412-fc10-4313-ae67-c02f13326c2c"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "ListRecordsWithOrganization",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "organization": "@triggerBody()['text_3']",
                      "entityName": "botcomponents",
                      "$select": "schemaname",
                      "$filter": "(@{outputs('Compose:_Create_OData_Expression')}) and parentbotid/schemaname eq  '@{body('Parse_JSON:_Transcript_MetaData')?['BotName']}'"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  }
                },
                "Select:_User_Topics": {
                  "runAfter": {
                    "List_rows_from_selected_environment:_Get_Schema_Names_for_User_Topics": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "e2d28a54-e776-4b4d-9b1e-a9c2fa95f4de"
                  },
                  "type": "Select",
                  "inputs": {
                    "from": "@outputs('List_rows_from_selected_environment:_Get_Schema_Names_for_User_Topics')?['body/value']",
                    "select": "@item()?['schemaname']"
                  }
                },
                "Compose:_Intersect_User_plus_Transcript_Topics": {
                  "runAfter": {
                    "Select:_User_Topics": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "6038aad5-1418-44c2-8911-c9bee7c36683"
                  },
                  "type": "Compose",
                  "inputs": "@intersection(body('Select:_User_Topics'), outputs('Compose:_Get_Topic_Names_From_Transcript'))"
                },
                "Set_variable:_TestResult": {
                  "runAfter": {
                    "Compose:_Intersect_User_plus_Transcript_Topics": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "838452a7-6693-4ea9-b4cb-fa654c1f857a"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "TestResult",
                    "value": "@if( equals(\r\n\t\t\tlength(outputs('Compose:_Intersect_User_plus_Transcript_Topics')), \r\n\t\t\tlength(outputs('Compose:_UserTopicsArray'))\r\n\t\t), \r\n\t\t1, \r\n\t\t2\r\n\t)"
                  }
                },
                "Compose:_UserTopicsArray": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "997208ad-fcf0-4199-b2d5-6855a912f8ec"
                  },
                  "type": "Compose",
                  "inputs": "@split(triggerBody()['text_2'], ',')"
                },
                "Join:_Create_OData_Expression": {
                  "runAfter": {
                    "Select:_Trim_extra_spaces": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "a7442837-2acb-40a4-a659-d71f3a49755d"
                  },
                  "type": "Join",
                  "inputs": {
                    "from": "@body('Select:_Trim_extra_spaces')",
                    "joinWith": "' or name eq '"
                  }
                },
                "Select:_Trim_extra_spaces": {
                  "runAfter": {
                    "Compose:_UserTopicsArray": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "b3131644-247e-4326-8950-d951e2e84bfc"
                  },
                  "type": "Select",
                  "inputs": {
                    "from": "@outputs('Compose:_UserTopicsArray')",
                    "select": "@trim(item())"
                  }
                }
              },
              "runAfter": {
                "Parse_JSON:_Transcript_MetaData": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Set_variable:_TestResult_2": {
                    "runAfter": {},
                    "metadata": {
                      "operationMetadataId": "0e790dc6-b47f-4857-8076-8701325d92fa"
                    },
                    "type": "SetVariable",
                    "inputs": {
                      "name": "TestResult",
                      "value": 2
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@empty(outputs('Compose:_Get_Topic_Names_From_Transcript'))",
                      false
                    ]
                  },
                  {
                    "greater": [
                      "@length(outputs('Compose:_Get_Topic_Names_From_Transcript'))",
                      0
                    ]
                  }
                ]
              },
              "metadata": {
                "operationMetadataId": "eae6a4b2-f3f8-4542-88d5-e62223b37728"
              },
              "type": "If"
            }
          },
          "runAfter": {
            "Initialize_variable:_TestResultReason": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "df6ee963-b1c8-40bc-b330-465629d65431"
          },
          "type": "Scope"
        },
        "Initialize_variable:_TestResult": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "967a7a85-7f56-4143-974c-4343a38b0088"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "TestResult",
                "type": "integer"
              }
            ]
          }
        },
        "Scope:_Catch": {
          "actions": {
            "Set_variable:_TestResult_3": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "581ffb94-b8d7-4c09-99c3-b04d7f6a5f94"
              },
              "type": "SetVariable",
              "inputs": {
                "name": "TestResult",
                "value": 4
              }
            }
          },
          "runAfter": {
            "Scope:_Try": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "ecfb70a7-7e93-45cf-a569-646c0c40c00f"
          },
          "type": "Scope"
        },
        "Scope:_Finally": {
          "actions": {
            "Set_variable:_TestResultReason": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "71326965-ac64-4402-8b0e-dbbb89e320dc"
              },
              "type": "SetVariable",
              "inputs": {
                "name": "TestResultReason",
                "value": "@{if( equals(\r\n\t\tvariables('TestResult'),\r\n\t\t1\r\n\t), \r\n\t'Exact match on the triggered topic names',\r\n\tif( equals(\r\n\t\t\tvariables('TestResult'), \r\n\t\t\t2\r\n\t\t),\r\n\t\t'Not an exact match on the triggered topic names',\r\n\t\t'An error occured while topic match'\r\n\t)\r\n)}"
              }
            },
            "Respond_to_a_Power_App_or_flow": {
              "runAfter": {
                "Set_variable:_TestResultReason": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "07c874f0-7886-489f-8e72-909741df316b"
              },
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "testresult": "@{variables('TestResult')}",
                  "testresultreason": "@variables('TestResultReason')"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "testresult": {
                      "title": "TestResult",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    },
                    "testresultreason": {
                      "title": "TestResultReason",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "runAfter": {
            "Scope:_Catch": [
              "Succeeded",
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "a4369468-94de-44a6-9a03-ef05fb59f62e"
          },
          "type": "Scope"
        },
        "Initialize_variable:_TestResultReason": {
          "runAfter": {
            "Initialize_variable:_TestResult": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "8a43da56-afab-4edd-8b08-56772b113ec8"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "TestResultReason",
                "type": "string"
              }
            ]
          }
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}