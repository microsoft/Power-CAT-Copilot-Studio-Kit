{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_CopilotStudioAcceleratorDataverse"
        },
        "runtimeSource": "embedded"
      },
      "shared_teams": {
        "api": {
          "name": "shared_teams"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_sharedteams_1ef7e"
        },
        "runtimeSource": "embedded"
      },
      "shared_office365users": {
        "api": {
          "name": "shared_office365users"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_sharedoffice365users_ceff6"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "Power Automate Region (cat_PowerAutomateEndpoint)": {
          "defaultValue": "Commercial",
          "type": "String",
          "metadata": {
            "schemaName": "cat_PowerAutomateEndpoint",
            "description": "Specify your Power Automate environment region/cloud: Commercial, GCC, GCC High, or DoD."
          }
        },
        "Compliance Support Contact Alias (cat_ComplianceSupportContactAlias)": {
          "defaultValue": "agent-coe-admins@powercattools.onmicrosoft.com",
          "type": "String",
          "metadata": {
            "schemaName": "cat_ComplianceSupportContactAlias",
            "description": "Email alias users can contact for support regarding the compliance system"
          }
        },
        "Compliance Documentation Link (cat_ComplianceDocumentationLink)": {
          "defaultValue": "https://aka.ms/guidanceLink",
          "type": "String",
          "metadata": {
            "schemaName": "cat_ComplianceDocumentationLink",
            "description": "Documentation link regarding the compliance requirements for developers"
          }
        }
      },
      "triggers": {
        "Send_Intake_To_Maker_Action_Called": {
          "type": "OpenApiConnectionWebhook",
          "inputs": {
            "parameters": {
              "catalog": "allcatalog",
              "category": "allcategory",
              "subscriptionRequest/entityname": "cat_compliancecase",
              "subscriptionRequest/sdkmessagename": "cat_SendIntakeNotice"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "BusinessEventsTrigger",
              "connectionName": "shared_commondataserviceforapps"
            }
          }
        }
      },
      "actions": {
        "Scope:_Try": {
          "type": "Scope",
          "actions": {
            "Get_Case": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_compliancecases",
                  "recordId": "@triggerOutputs()?['body/InputParameters/target/Id']",
                  "$expand": "cat_ThresholdViolations($select=cat_risklevel,cat_thresholdconfigid,cat_mitigation,cat_defaultvalue,cat_filtercolumn,cat_enabled,cat_configid)"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "GetItem",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Add_a_new_row:_Logs": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "bd55c74c-93e5-436d-b4cb-095b1d9d2540"
              }
            },
            "List_Policies": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_actionpolicies",
                  "$select": "cat_description,statecode,cat_actionpolicyid,cat_sladays,cat_policyid,cat_enforcementaction,cat_risklevel"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Get_Case": [
                  "Succeeded"
                ]
              }
            },
            "Get_Case_Policy": {
              "type": "Query",
              "inputs": {
                "from": "@outputs('List_Policies')?['body/value']",
                "where": "@equals(item()?['cat_risklevel'],outputs('Get_Case')?['body/cat_risklevel'])"
              },
              "runAfter": {
                "List_Policies": [
                  "Succeeded"
                ]
              }
            },
            "Policy_SLA": {
              "type": "Compose",
              "inputs": "@first(body('Get_Case_Policy'))?['cat_sladays']",
              "runAfter": {
                "Get_Case_Policy": [
                  "Succeeded"
                ]
              }
            },
            "Update_Case_-_Open_Status_Intake_Sent_Start_SLA": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_compliancecases",
                  "recordId": "@outputs('Get_Case')?['body/cat_compliancecaseid']",
                  "item/cat_statusreason": 335350000,
                  "item/cat_expirydate": "@addDays(utcNow(), first(outputs('List_Policies')?['body/value'])?['cat_sladays'], 'yyyy-MM-ddTHH:mm:ssZ')",
                  "item/cat_intakenoticesent": "@utcNow()"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "UpdateOnlyRecord",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Policy_SLA": [
                  "Succeeded"
                ]
              }
            },
            "Add_Note_-_Notice_Sent": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "annotations",
                  "item/subject": "Intake notice sent to maker",
                  "item/notetext": "Notice requesting intake information and compliance instructions sent.",
                  "item/isdocument": false,
                  "item/objectid_cat_compliancecase@odata.bind": "/cat_compliancecases(@{outputs('Update_Case_-_Open_Status_Intake_Sent_Start_SLA')?['body/cat_compliancecaseid']})"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Update_Case_-_Open_Status_Intake_Sent_Start_SLA": [
                  "Succeeded"
                ]
              }
            },
            "Send_Intake_As_Adaptive_Card_and_Wait_for_Response": {
              "type": "OpenApiConnectionWebhook",
              "inputs": {
                "parameters": {
                  "poster": "Flow bot",
                  "location": "Chat with Flow bot",
                  "body/body/messageBody": "@outputs('New_Card')",
                  "body/body/updateMessage": "Thanks for your response! Please make sure to remove all violations within the SLA. If the admin approves your case, the agent can continue to exist. If not, the agent may be quarantined.",
                  "body/body/recipient/to": "@outputs('Update_Case_-_Open_Status_Intake_Sent_Start_SLA')?['body/cat_owneremail']",
                  "body/body/recipient/isAlert": true
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams",
                  "operationId": "PostCardAndWaitForResponse",
                  "connectionName": "shared_teams"
                }
              },
              "runAfter": {
                "Old_Card": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c45a5f46-ef9a-4dbe-96e4-425dc4a54c02"
              }
            },
            "Status_is_Open_or_Approved": {
              "type": "If",
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@outputs('Get_Updated_Case_After_Intake_Submitted')?['body/cat_statusreason']",
                      335350000
                    ]
                  },
                  {
                    "equals": [
                      "@outputs('Get_Updated_Case_After_Intake_Submitted')?['body/cat_statusreason']",
                      335350002
                    ]
                  }
                ]
              },
              "actions": {
                "Find_Agent": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "cat_agentdetailses",
                      "$filter": "cat_agentid eq @{outputs('Get_Case')?['body/cat_agentid']}",
                      "$top": 1
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "Add_Note_-_Intake_Submitted": [
                      "Succeeded"
                    ]
                  }
                },
                "Agent_Found": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@length(outputs('Find_Agent')?['body/value'])",
                          0
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Run_Update_Case": {
                      "type": "Workflow",
                      "inputs": {
                        "host": {
                          "workflowReferenceName": "9bb6ddec-e3af-f011-bbd3-00224809eacc"
                        },
                        "body": {
                          "text": "@string(first(outputs('Find_Agent')?['body/value']))",
                          "text_1": "@string(body('Get_Updated_Case'))",
                          "text_2": "@string(outputs('List_Thresholds')?['body/value'])",
                          "text_3": "@string(outputs('List_Policies')?['body/value'])"
                        }
                      },
                      "runAfter": {
                        "List_Thresholds": [
                          "Succeeded"
                        ]
                      }
                    },
                    "List_Thresholds": {
                      "type": "OpenApiConnection",
                      "inputs": {
                        "parameters": {
                          "entityName": "cat_thresholdconfigs",
                          "$select": "cat_configid,cat_thresholdconfigid,cat_filtercolumn,cat_defaultvalue,cat_filteroperator,cat_risklevel,cat_category,statecode",
                          "$filter": "statecode eq 0"
                        },
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                          "operationId": "ListRecords",
                          "connectionName": "shared_commondataserviceforapps"
                        }
                      }
                    }
                  },
                  "else": {
                    "actions": {}
                  },
                  "runAfter": {
                    "Find_Agent": [
                      "Succeeded"
                    ]
                  }
                },
                "Add_Note_-_Intake_Submitted": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "annotations",
                      "item/subject": "Intake submitted by maker",
                      "item/notetext": "Intake was submitted by maker on @{formatDateTime(utcnow(), 'dddd, dd MMMM yyyy')}",
                      "item/isdocument": false,
                      "item/objectid_cat_compliancecase@odata.bind": "/cat_compliancecases(@{outputs('Update_Case_-_Open_Status_Intake_Sent_Start_SLA')?['body/cat_compliancecaseid']})"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "CreateRecord",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "Get_Updated_Case": [
                      "Succeeded"
                    ]
                  }
                },
                "Update_Case_-_Intake_Submitted": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "cat_compliancecases",
                      "recordId": "@outputs('Get_Case')?['body/cat_compliancecaseid']",
                      "item/cat_businessjustification": "@outputs('Send_Intake_As_Adaptive_Card_and_Wait_for_Response')?['body/data/businessJustification']",
                      "item/cat_statusreason": "@outputs('New_Status')",
                      "item/cat_dataclassification": "@outputs('Data_Classification')",
                      "item/cat_expectednumberofusers": "@outputs('Send_Intake_As_Adaptive_Card_and_Wait_for_Response')?['body/data/expectedUsers']",
                      "item/cat_lastsubmitdate": "@utcNow()"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "UpdateOnlyRecord",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "New_Status": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "e5adcf2c-322a-4db6-a49d-d2355d7c7320"
                  }
                },
                "New_Status": {
                  "type": "Compose",
                  "description": "Change Open To Submitted Or Keep Current Status",
                  "inputs": "@if(equals(outputs('Get_Updated_Case_After_Intake_Submitted')?['body/cat_statusreason'], 335350000), 335350001, outputs('Get_Updated_Case_After_Intake_Submitted')?['body/cat_statusreason'])",
                  "runAfter": {
                    "Data_Classification": [
                      "Succeeded"
                    ]
                  }
                },
                "Data_Classification": {
                  "type": "Compose",
                  "inputs": "@first(body('Filter_Data_Classification'))?['Value']",
                  "runAfter": {
                    "Filter_Data_Classification": [
                      "Succeeded"
                    ]
                  }
                },
                "Filter_Data_Classification": {
                  "type": "Query",
                  "inputs": {
                    "from": [
                      {
                        "Label": "Public",
                        "Value": 335350000
                      },
                      {
                        "Label": "Internal",
                        "Value": 335350001
                      },
                      {
                        "Label": "Confidential",
                        "Value": 335350002
                      },
                      {
                        "Label": "Restricted",
                        "Value": 335350003
                      }
                    ],
                    "where": "@equals(item()?['Label'],outputs('Send_Intake_As_Adaptive_Card_and_Wait_for_Response')?['body/data/dataclassification'])"
                  }
                },
                "Get_Updated_Case": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "cat_compliancecases",
                      "recordId": "@outputs('Update_Case_-_Intake_Submitted')?['body/cat_compliancecaseid']",
                      "$expand": "cat_ThresholdViolations($select=cat_risklevel,cat_thresholdconfigid,cat_mitigation,cat_defaultvalue,cat_filtercolumn,cat_enabled,cat_configid),owninguser($select=fullname,domainname,systemuserid,internalemailaddress)"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "GetItem",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "Update_Case_-_Intake_Submitted": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "else": {
                "actions": {}
              },
              "runAfter": {
                "Get_Updated_Case_After_Intake_Submitted": [
                  "Succeeded"
                ]
              }
            },
            "Get_Updated_Case_After_Intake_Submitted": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_compliancecases",
                  "recordId": "@triggerOutputs()?['body/InputParameters/target/Id']",
                  "$expand": "cat_ThresholdViolations($select=cat_risklevel,cat_thresholdconfigid,cat_mitigation,cat_defaultvalue,cat_filtercolumn,cat_enabled,cat_configid),owninguser($select=fullname,domainname,systemuserid,internalemailaddress)"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "GetItem",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Send_Intake_As_Adaptive_Card_and_Wait_for_Response": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "bd55c74c-93e5-436d-b4cb-095b1d9d2540"
              }
            },
            "Get_Flow_Endpoint": {
              "type": "Compose",
              "inputs": "@if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'gcc'), 'https://make.gov.powerautomate.us/', \r\n    if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'gcc(high)'), 'https://make.high.powerautomate.us/', \r\n        if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'dod'), 'https://make.powerautomate.appsplatform.us/', \r\n            'https://make.powerautomate.com/'\r\n        )\r\n    )\r\n)",
              "metadata": {
                "operationMetadataId": "dc8e743d-1408-445c-8614-ee97abfcad5e"
              }
            },
            "Add_a_new_row:_Logs": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_copilotstudiokitlogses",
                  "item/cat_executionstatuscode": 2,
                  "item/cat_cloudflowinstanceurl": "@{outputs('Get_Flow_Endpoint')}environments/@{workflow()?['tags']?['environmentName']}/solutions/73fbfa55-8642-43d0-ab47-f15fab5813a4/flows/@{workflow()?['name']}/runs/@{workflow()?['run']?['name']}",
                  "item/cat_cloudflowname": "Agent Compliance | Request Intake",
                  "item/cat_ComplianceCase@odata.bind": "/cat_compliancecases(@{triggerOutputs()?['body/InputParameters/target/Id']})"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Get_Flow_Endpoint": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "1743ccd2-b8bb-4cee-9823-870ee9d4d438"
              }
            },
            "New_Card": {
              "type": "Compose",
              "inputs": {
                "$schema": "https://adaptivecards.io/schemas/adaptive-card.json",
                "type": "AdaptiveCard",
                "version": "1.5",
                "body": [
                  {
                    "type": "TextBlock",
                    "text": "Hello @{outputs('Get_user_profile_(V2)')?['body/givenName']},",
                    "wrap": true,
                    "weight": "Bolder",
                    "size": "Large"
                  },
                  {
                    "type": "TextBlock",
                    "text": "A compliance case has been opened for your agent \"@{outputs('Get_Case')?['body/cat_agentdisplayname']}\" because one or more risk thresholds were breached.",
                    "wrap": true
                  },
                  {
                    "type": "TextBlock",
                    "text": "**Your case details**",
                    "wrap": true,
                    "spacing": "Medium"
                  },
                  {
                    "type": "TextBlock",
                    "text": "• Case ID: @{outputs('Get_Case')?['body/cat_caseid']}\n• Opened: @{outputs('Add_a_new_row:_Logs')?['body/createdon']}\n• SLA deadline: @{outputs('Get_Case')?['body/cat_expirydate']} (remaining: @{outputs('Get_Case')?['body/cat_daysremaining']} days)",
                    "wrap": true,
                    "spacing": "Small"
                  },
                  {
                    "type": "TextBlock",
                    "text": "**What you need to do (quick checklist)**",
                    "wrap": true,
                    "spacing": "Medium"
                  },
                  {
                    "type": "TextBlock",
                    "text": "1) Complete intake (required)\n   – Provide business justification and confirm owner.\n   – Set data classification.\n2) Review automated checks\n   – Address any “Medium” or “High” risk violations shown in your case.\n3) Check back daily\n   – The system will re‑evaluate and send an updated status on a daily basis.",
                    "wrap": true,
                    "spacing": "Small"
                  },
                  {
                    "type": "TextBlock",
                    "text": "**Why this case was opened (summary)**",
                    "wrap": true,
                    "spacing": "Medium"
                  },
                  {
                    "type": "Container",
                    "style": "emphasis",
                    "spacing": "Small",
                    "bleed": true,
                    "items": [
                      {
                        "type": "TextBlock",
                        "text": "Triggered Threshold Summary",
                        "wrap": true,
                        "weight": "Bolder",
                        "size": "Medium",
                        "separator": true
                      },
                      {
                        "type": "ColumnSet",
                        "spacing": "Small",
                        "columns": [
                          {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                              {
                                "type": "TextBlock",
                                "text": "Name",
                                "wrap": true,
                                "weight": "Bolder",
                                "spacing": "None"
                              }
                            ]
                          },
                          {
                            "type": "Column",
                            "width": "auto",
                            "items": [
                              {
                                "type": "TextBlock",
                                "text": "Risk Level",
                                "wrap": true,
                                "weight": "Bolder",
                                "spacing": "None"
                              }
                            ]
                          },
                          {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                              {
                                "type": "TextBlock",
                                "text": "Mitigation",
                                "wrap": true,
                                "weight": "Bolder",
                                "spacing": "None"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "$data": "${TriggeredThresholdSummary}",
                        "type": "ColumnSet",
                        "spacing": "Small",
                        "columns": [
                          {
                            "type": "Column",
                            "width": "stretch",
                            "items": "@body('Select_Threshold_Names_Column_Items')"
                          },
                          {
                            "type": "Column",
                            "width": "auto",
                            "items": "@body('Select_Threshold_Risks_Column_Items')"
                          },
                          {
                            "type": "Column",
                            "width": "stretch",
                            "items": "@body('Select_Threshold_Mitigation_Column_Items')"
                          }
                        ],
                        "separator": true
                      }
                    ]
                  },
                  {
                    "type": "TextBlock",
                    "text": "**Enforcement policy**\nIf the required intake and fixes are not completed by @{outputs('Get_Case')?['body/cat_expirydate']}, the system will apply enforcement: **@{first(body('Get_Case_Policy'))?['cat_enforcementaction']}**.\nYou will receive reminders before the deadline.",
                    "wrap": true,
                    "spacing": "Medium"
                  },
                  {
                    "type": "TextBlock",
                    "text": "**Tips & references**\n• Step‑by‑step intake guidance: @{parameters('Compliance Documentation Link (cat_ComplianceDocumentationLink)')}\n• Need help? Contact the CoE Admin team: @{parameters('Compliance Support Contact Alias (cat_ComplianceSupportContactAlias)')}\n\nThank you for your prompt attention.\n— Compliance Center",
                    "wrap": true,
                    "spacing": "Small"
                  },
                  {
                    "type": "TextBlock",
                    "text": "Action Required: Submit Agent intake details for Case @{outputs('Update_Case_-_Open_Status_Intake_Sent_Start_SLA')?['body/cat_caseid']} by @{addDays(utcnow(), first(outputs('List_Policies')?['body/value'])?['cat_sladays'], 'dddd, dd MMMM yyyy')}. You must also fix all medium or high risk violations to avoid quarantine or deletion.",
                    "wrap": true,
                    "weight": "Bolder",
                    "size": "Medium",
                    "separator": true
                  },
                  {
                    "type": "Input.Text",
                    "id": "businessJustification",
                    "placeholder": "Enter your business justification here...",
                    "isMultiline": true,
                    "isRequired": true,
                    "label": "Business Justification",
                    "errorMessage": "Business justification is required."
                  },
                  {
                    "type": "Input.ChoiceSet",
                    "id": "dataClassification",
                    "isRequired": true,
                    "label": "Data Classification",
                    "style": "compact",
                    "choices": [
                      {
                        "title": "Public",
                        "value": "Public"
                      },
                      {
                        "title": "Internal",
                        "value": "Internal"
                      },
                      {
                        "title": "Confidential",
                        "value": "Confidential"
                      },
                      {
                        "title": "Restricted",
                        "value": "Restricted"
                      }
                    ],
                    "placeholder": "Select classification",
                    "errorMessage": "Please select a data classification."
                  },
                  {
                    "type": "Input.Number",
                    "id": "expectedUsers",
                    "isRequired": true,
                    "label": "Expected number of users",
                    "placeholder": "Enter a whole number",
                    "min": 1,
                    "errorMessage": "Enter a whole number of 1 or greater."
                  }
                ],
                "actions": [
                  {
                    "type": "Action.Submit",
                    "title": "Submit",
                    "data": {
                      "action": "submitForm",
                      "cardTypeId": "CaseIntake"
                    }
                  }
                ]
              },
              "runAfter": {
                "Get_user_profile_(V2)": [
                  "Succeeded"
                ]
              }
            },
            "Parse_Thresholds": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Get_Case')?['cat_ThresholdViolations']",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cat_risklevel@OData.Community.Display.V1.FormattedValue": {
                        "type": "string"
                      },
                      "cat_risklevel": {
                        "type": "integer"
                      },
                      "cat_mitigation": {
                        "type": "string"
                      },
                      "cat_defaultvalue": {
                        "type": "string"
                      },
                      "cat_filtercolumn": {
                        "type": "string"
                      },
                      "cat_configid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "cat_risklevel@OData.Community.Display.V1.FormattedValue",
                      "cat_risklevel",
                      "cat_mitigation",
                      "cat_defaultvalue",
                      "cat_filtercolumn",
                      "cat_configid"
                    ]
                  }
                }
              },
              "runAfter": {
                "Add_Note_-_Notice_Sent": [
                  "Succeeded"
                ]
              }
            },
            "Select_Threshold_Names_Column_Items": {
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_Thresholds')",
                "select": {
                  "type": "TextBlock",
                  "text": "@item()['cat_configid']",
                  "wrap": "true"
                }
              },
              "runAfter": {
                "Parse_Thresholds": [
                  "Succeeded"
                ]
              }
            },
            "Select_Threshold_Risks_Column_Items": {
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_Thresholds')",
                "select": {
                  "type": "TextBlock",
                  "text": "@item()['cat_risklevel@OData.Community.Display.V1.FormattedValue']",
                  "wrap": "true"
                }
              },
              "runAfter": {
                "Select_Threshold_Names_Column_Items": [
                  "Succeeded"
                ]
              }
            },
            "Select_Threshold_Mitigation_Column_Items": {
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_Thresholds')",
                "select": {
                  "type": "TextBlock",
                  "text": "@item()['cat_mitigation']",
                  "wrap": "true"
                }
              },
              "runAfter": {
                "Select_Threshold_Risks_Column_Items": [
                  "Succeeded"
                ]
              }
            },
            "Old_Card": {
              "type": "Compose",
              "inputs": {
                "$schema": "https://adaptivecards.io/schemas/adaptive-card.json",
                "type": "AdaptiveCard",
                "version": "1.5",
                "body": [
                  {
                    "type": "TextBlock",
                    "text": "Action Required: Submit Agent intake details for Case @{outputs('Update_Case_-_Open_Status_Intake_Sent_Start_SLA')?['body/cat_caseid']} by @{addDays(utcnow(), first(outputs('List_Policies')?['body/value'])?['cat_sladays'], 'dddd, dd MMMM yyyy')}. You must also fix all medium or high risk violations to avoid quarantine or deletion.",
                    "wrap": true,
                    "weight": "Bolder",
                    "size": "Medium"
                  },
                  {
                    "type": "Input.Text",
                    "id": "businessJustification",
                    "placeholder": "Enter your business justification here...",
                    "isMultiline": true,
                    "isRequired": true,
                    "label": "Business Justification"
                  },
                  {
                    "type": "Input.ChoiceSet",
                    "id": "dataClassification",
                    "isRequired": true,
                    "label": "Data Classification",
                    "style": "compact",
                    "choices": [
                      {
                        "title": "Public",
                        "value": "Public"
                      },
                      {
                        "title": "Internal",
                        "value": "Internal"
                      },
                      {
                        "title": "Confidential",
                        "value": "Confidential"
                      },
                      {
                        "title": "Restricted",
                        "value": "Restricted"
                      }
                    ],
                    "placeholder": "Select classification"
                  },
                  {
                    "type": "Input.Number",
                    "id": "expectedUsers",
                    "isRequired": true,
                    "label": "Expected number of users",
                    "placeholder": "Enter a whole number",
                    "min": 1
                  }
                ],
                "actions": [
                  {
                    "type": "Action.Submit",
                    "title": "Submit",
                    "data": {
                      "action": "submitForm",
                      "cardTypeId": "CaseIntake"
                    }
                  }
                ]
              },
              "runAfter": {
                "New_Card": [
                  "Succeeded"
                ]
              }
            },
            "Enforcement_Action": {
              "type": "Compose",
              "inputs": "@first(body('Get_Case_Policy'))?['cat_enforcementaction']",
              "runAfter": {
                "Select_Threshold_Mitigation_Column_Items": [
                  "Succeeded"
                ]
              }
            },
            "Get_user_profile_(V2)": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "id": "@outputs('Get_Case')?['body/cat_owneremail']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users",
                  "operationId": "UserProfile_V2",
                  "connectionName": "shared_office365users"
                }
              },
              "runAfter": {
                "Enforcement_Action": [
                  "Succeeded",
                  "Failed",
                  "Skipped",
                  "TimedOut"
                ]
              }
            }
          },
          "runAfter": {
            "Initialize_variable:_ErrorMessage": [
              "Succeeded"
            ]
          }
        },
        "Initialize_variable:_ErrorMessage": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ErrorMessage",
                "type": "string"
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "84dc8095-fa63-4f71-aaa9-ed2863a636bb"
          }
        },
        "Scope:_Catch": {
          "type": "Scope",
          "actions": {
            "Filter_array:_Error_Actions": {
              "type": "Query",
              "inputs": {
                "from": "@result('Scope:_Try')",
                "where": "@or(equals(item()?['Status'], 'Failed'), equals(item()?['Status'], 'TimedOut'))"
              },
              "metadata": {
                "operationMetadataId": "318aa9b2-4531-451c-b162-84cf7a4a236e"
              }
            },
            "Set_variable:_ErrorMessage": {
              "type": "SetVariable",
              "inputs": {
                "name": "ErrorMessage",
                "value": "@{first(body('Filter_array:_Error_Actions'))?['error']?['message']}"
              },
              "runAfter": {
                "Filter_array:_Error_Actions": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "ee38e0e1-03cd-48d8-9933-d73f7204b0f7"
              }
            }
          },
          "runAfter": {
            "Scope:_Try": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "4f2e4827-62c8-4225-94cd-14089e7ac8f7"
          }
        },
        "Scope:_Finally": {
          "type": "Scope",
          "actions": {
            "Update_a_row:_Logs": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_copilotstudiokitlogses",
                  "recordId": "@outputs('Add_a_new_row:_Logs')?['body/cat_copilotstudiokitlogsid']",
                  "item/cat_executionstatuscode": "@if(not(empty(variables('ErrorMessage'))), 4, 3)",
                  "item/cat_errormessage": "@if(not(empty(variables('ErrorMessage'))), variables('ErrorMessage'), null)"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "metadata": {
                "operationMetadataId": "9f447776-551f-41e3-a432-ecfb376e623f"
              }
            }
          },
          "runAfter": {
            "Scope:_Catch": [
              "Succeeded",
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "3b16a931-71ef-4a27-b6c8-cea6a9fc38f1"
          }
        }
      }
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}