{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_CopilotStudioAcceleratorDataverse"
        },
        "runtimeSource": "embedded"
      },
      "shared_commondataserviceforapps_1": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_CopilotStudioAcceleratorDataverse"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "Delay for Azure Application Insights Enrichment (Minutes) (cat_DelayforAzureApplicationInsightsEnrichment)": {
          "defaultValue": 10,
          "type": "Int",
          "metadata": {
            "schemaName": "cat_DelayforAzureApplicationInsightsEnrichment",
            "description": "This will be used to validate Generative Answer type of tests using Application Insight result."
          }
        },
        "Power Automate Region (cat_PowerAutomateEndpoint)": {
          "defaultValue": "Commercial",
          "type": "String",
          "metadata": {
            "schemaName": "cat_PowerAutomateEndpoint",
            "description": "Specify your Power Automate environment region/cloud: Commercial, GCC, GCC High, or DoD."
          }
        }
      },
      "triggers": {
        "When_an_action_is_performed": {
          "type": "OpenApiConnectionWebhook",
          "inputs": {
            "parameters": {
              "catalog": "allcatalog",
              "category": "allcategory",
              "subscriptionRequest/entityname": "cat_copilottestrun",
              "subscriptionRequest/sdkmessagename": "cat_RunAzureApplicationInsightsEnrichment"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "BusinessEventsTrigger",
              "connectionName": "shared_commondataserviceforapps"
            }
          },
          "metadata": {
            "operationMetadataId": "6f260134-22f0-4ba2-86b5-7e66d3481ead"
          }
        }
      },
      "actions": {
        "Get_Generative_Answers_Copilot_Test_Results": {
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "entityName": "cat_copilottestresults",
              "$select": "cat_name, cat_copilottestresultid, cat_response, cat_responsereceivedtimestamp, cat_resultcode",
              "$filter": "_cat_copilottestrunid_value eq '@{triggerOutputs()?['body/InputParameters/CopilotTestRunId']}' \nand statecode eq 0 \nand cat_resultcode ne 2 and cat_resultcode ne 3 and cat_resultcode ne 4 \nand (cat_CopilotTestId/cat_testtypecode eq 4 or cat_CopilotTestId/cat_testtypecode eq 5) \nand _cat_parent_value eq null",
              "$orderby": "createdon asc",
              "$expand": "cat_CopilotTestId($select=cat_generativeansweroutcomecode,cat_expectedresponse,cat_testutterance,cat_testtypecode)"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "ListRecords",
              "connectionName": "shared_commondataserviceforapps"
            },
            "retryPolicy": {
              "type": "none"
            }
          },
          "runAfter": {
            "Parse_Token_Response": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "6076da45-72f2-4ca7-bc39-244924e64238"
          }
        },
        "Get_Copilot_Configuration": {
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "entityName": "cat_copilotconfigurations",
              "recordId": "@triggerOutputs()?['body/InputParameters/CopilotConfigurationId']",
              "$select": "cat_delayforazureapplicationinsightsenrichment, cat_isgeneratedanswersanalysisenabled, cat_azureappinsightsapplicationid, cat_azureappinsightstenantid, cat_azureappinsightsclientid, cat_azureappinsightssecretlocationcode, cat_azureappinsightssecret, cat_azureappinsightsenvironmentvariable"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "GetItem",
              "connectionName": "shared_commondataserviceforapps"
            }
          },
          "runAfter": {},
          "runtimeConfiguration": {
            "secureData": {
              "properties": [
                "outputs"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "25599a62-4e1c-487d-84bb-d087bb11b867"
          }
        },
        "Apply_to_each_Generative_Answers_Result": {
          "type": "Foreach",
          "foreach": "@outputs('Get_Generative_Answers_Copilot_Test_Results')?['body/value']",
          "actions": {
            "Condition:_Check_for_Multiturn_Test": {
              "type": "If",
              "expression": {
                "not": {
                  "equals": [
                    "@items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_testtypecode']",
                    5
                  ]
                }
              },
              "actions": {
                "Scope:_Non-Multiturn_Execution": {
                  "type": "Scope",
                  "actions": {
                    "Get_Azure_App_Insights_Query_Response": {
                      "type": "OpenApiConnection",
                      "inputs": {
                        "parameters": {
                          "actionName": "cat_ExecuteAppInsightsQuery",
                          "item/cat_AppInsightsQuery": "customEvents\n| where name == \"GenerativeAnswers\"\n| where tostring(todynamic(customDimensions).conversationId) == \"@{items('Apply_to_each_Generative_Answers_Result')?['cat_name']}\"\n| where timestamp between ((datetime(@{items('Apply_to_each_Generative_Answers_Result')?['cat_responsereceivedtimestamp']}) - 1h) .. (datetime(@{items('Apply_to_each_Generative_Answers_Result')?['cat_responsereceivedtimestamp']}) + 1h))\n| extend cd = todynamic(customDimensions)\n| extend result = tostring(cd.Result)\n| project result",
                          "item/cat_AppInsightsAccessToken": "@body('Parse_Token_Response')?['access_token']",
                          "item/cat_AppInsightsApplicationId": "@outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightsapplicationid']"
                        },
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                          "operationId": "PerformUnboundAction",
                          "connectionName": "shared_commondataserviceforapps"
                        }
                      },
                      "metadata": {
                        "operationMetadataId": "b72d6acb-f159-4763-8248-69b904edf7ae"
                      }
                    },
                    "Parse_Query_Response": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@outputs('Get_Azure_App_Insights_Query_Response')?['body/cat_AppInsightsResponse']",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "tables": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "columns": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "type"
                                      ]
                                    }
                                  },
                                  "rows": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "columns",
                                  "rows"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Get_Azure_App_Insights_Query_Response": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "0d04fbdb-4520-4b70-8d58-1c7b933092fe"
                      }
                    },
                    "Update_Copilot_Test_Result": {
                      "type": "OpenApiConnection",
                      "inputs": {
                        "parameters": {
                          "entityName": "cat_copilottestresults",
                          "recordId": "@items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestresultid']",
                          "item/cat_resultcode": "@if(\r\n    empty(body('Parse_Query_Response')?['tables'][0]['rows']),\r\n    if(\r\n        or(\r\n            equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\r\n            equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4)\r\n        ),\r\n        3,\r\n        if(\r\n            equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\r\n            5,\r\n            3\r\n        )\r\n    ),\r\n    if(\r\n        equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\r\n        if(\r\n            startsWith(body('Parse_Query_Response')?['tables'][0]['rows'][0][0], 'Filtered'),\r\n            1,\r\n            2\r\n        ),\r\n        if(\r\n            equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4),\r\n            if(\r\n                or(\r\n                    equals(body('Parse_Query_Response')?['tables'][0]['rows'][0][0], 'No Search Results'),\r\n                    equals(body('Parse_Query_Response')?['tables'][0]['rows'][0][0], 'Answer not Found in Search Results')\r\n                ),\r\n                1,\r\n                2\r\n            ),\r\n            if(\r\n                equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\r\n                5,\r\n                3\r\n            )\r\n        )\r\n    )\r\n)",
                          "item/cat_appinsightsresult": "@if(\r\n    greater(\r\n        length(body('Parse_Query_Response')?['tables'][0]['rows']), \r\n        0\r\n    ), \r\n    body('Parse_Query_Response')?['tables'][0]['rows'][0][0], \r\n    'No Azure Application Insights Result'\r\n)",
                          "item/cat_resultreason": "@if(\r\n    empty(body('Parse_Query_Response')?['tables'][0]['rows']),\r\n    if(\r\n        or(\r\n            equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\r\n            equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4)\r\n        ),\r\n        'Impossible to evaluate: no Azure Application Insights result',\r\n        if(\r\n            equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\r\n            'No Azure Application Insights result, but result can still be assessed with AI Builder',\r\n            'Impossible to evaluate: no Azure Application Insights result'\r\n        )\r\n    ),\r\n    if(\r\n        equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\r\n        if(\r\n            startsWith(body('Parse_Query_Response')?['tables'][0]['rows'][0][0], 'Filtered'),\r\n            'Answer was moderated',\r\n            'Moderation was expected'\r\n        ),\r\n        if(\r\n            equals(items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4),\r\n            if(\r\n                or(\r\n                    equals(body('Parse_Query_Response')?['tables'][0]['rows'][0][0], 'No Search Results'),\r\n                    equals(body('Parse_Query_Response')?['tables'][0]['rows'][0][0], 'Answer not Found in Search Results')\r\n                ),\r\n                'Answer was not generated because of no search results',\r\n                'No search results were expected'\r\n            ),\r\n            if(\r\n                equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\r\n               'Result still needs to be assessed by AI Builder',\r\n               'Could not assess the answer'\r\n            )\r\n        )\r\n    )\r\n)"
                        },
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                          "operationId": "UpdateRecord",
                          "connectionName": "shared_commondataserviceforapps"
                        }
                      },
                      "runAfter": {
                        "Parse_Query_Response": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "15aaca7b-99dd-469b-99b8-9eae5e9e7a11"
                      }
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "5eb1c53a-9fed-4b95-bae6-872234c4b2f9"
                  }
                }
              },
              "else": {
                "actions": {
                  "Scope:_Multiturn_Execution": {
                    "type": "Scope",
                    "actions": {
                      "Condition:_Check_if_Generative_Answers_Test_Results_are_present": {
                        "type": "If",
                        "expression": {
                          "greater": [
                            "@length(outputs('List_rows:_Get_Child_Test_Results')?['body/value'])",
                            0
                          ]
                        },
                        "actions": {
                          "Perform_an_unbound_action:_App_Insights_Result": {
                            "type": "OpenApiConnection",
                            "inputs": {
                              "parameters": {
                                "actionName": "cat_ExecuteAppInsightsQuery",
                                "item/cat_AppInsightsQuery": "customEvents\n| where name == \"GenerativeAnswers\"\n| where tostring(todynamic(customDimensions).conversationId) == \"@{items('Apply_to_each_Generative_Answers_Result')?['cat_name']}\"\n| where timestamp between ((datetime(@{first(outputs('List_rows:_Get_Child_Test_Results')?['body/value'])?['cat_responsereceivedtimestamp']}) - 1h) .. (datetime(@{first(outputs('List_rows:_Get_Child_Test_Results')?['body/value'])?['cat_responsereceivedtimestamp']}) + 1h))\n| extend Result = tostring(customDimensions.Result),\n              Message = tostring(customDimensions.Message)\n| project Result, Message",
                                "item/cat_AppInsightsAccessToken": "@body('Parse_Token_Response')?['access_token']",
                                "item/cat_AppInsightsApplicationId": "@outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightsapplicationid']"
                              },
                              "host": {
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                "operationId": "PerformUnboundAction",
                                "connectionName": "shared_commondataserviceforapps"
                              }
                            },
                            "metadata": {
                              "operationMetadataId": "b72d6acb-f159-4763-8248-69b904edf7ae"
                            }
                          },
                          "Parse_JSON:_Query_Response_for_Child_Test_Result": {
                            "type": "ParseJson",
                            "inputs": {
                              "content": "@outputs('Perform_an_unbound_action:_App_Insights_Result')?['body/cat_AppInsightsResponse']",
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "tables": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "columns": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ]
                                          }
                                        },
                                        "rows": {
                                          "type": "array",
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "columns",
                                        "rows"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "runAfter": {
                              "Perform_an_unbound_action:_App_Insights_Result": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "0d04fbdb-4520-4b70-8d58-1c7b933092fe"
                            }
                          },
                          "Select_TestUtterence_with_Result": {
                            "type": "Select",
                            "inputs": {
                              "from": "@body('Parse_JSON:_Query_Response_for_Child_Test_Result')?['tables']?[0]?['rows']",
                              "select": {
                                "Message": "@item()?[1]",
                                "Result": "@item()?[0]"
                              }
                            },
                            "runAfter": {
                              "Parse_JSON:_Query_Response_for_Child_Test_Result": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "20123ae4-dcd0-4734-bdb9-34aa38f8f878"
                            }
                          },
                          "Apply_to_each:_Child_Agent_Test_Results": {
                            "type": "Foreach",
                            "foreach": "@outputs('List_rows:_Get_Child_Test_Results')?['body/value']",
                            "actions": {
                              "Filter_array:_Child_Test_App_Insights_Result": {
                                "type": "Query",
                                "inputs": {
                                  "from": "@body('Select_TestUtterence_with_Result')",
                                  "where": "@equals(item()?['Message'], if(not(empty(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_appinsightsmessage'])), items('Apply_to_each:_Child_Agent_Test_Results')?['cat_appinsightsmessage'], items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_testutterance']))"
                                },
                                "metadata": {
                                  "operationMetadataId": "01f432f1-1c35-4725-ae2a-def718104818"
                                }
                              },
                              "Condition:_Check_to_continue_Multiturn_processing": {
                                "type": "If",
                                "expression": {
                                  "equals": [
                                    "@variables('ContinueMultiturnProcessing')",
                                    "@true"
                                  ]
                                },
                                "actions": {
                                  "Update_a_row:_Agent_Child_Result": {
                                    "type": "OpenApiConnection",
                                    "inputs": {
                                      "parameters": {
                                        "entityName": "cat_copilottestresults",
                                        "recordId": "@items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestresultid']",
                                        "item/cat_resultcode": "@if(\r\n    empty(body('Filter_array:_Child_Test_App_Insights_Result')),\r\n    if(\r\n        or(\r\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\r\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4)\r\n        ),\r\n        3,\r\n        if(\r\n            equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\r\n            5,\r\n            3\r\n        )\r\n    ),\r\n    if(\r\n        equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\r\n        if(\r\n\t\t\tstartsWith(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'Filtered'),\r\n            1,\r\n            2\r\n        ),\r\n        if(\r\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4),\r\n            if(\r\n                or(\r\n                    equals(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'No Search Results'),\r\n                    equals(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'Answer not Found in Search Results')\r\n                ),\r\n                1,\r\n                2\r\n            ),\r\n            if(\r\n                equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\r\n                5,\r\n                3\r\n            )\r\n        )\r\n    )\r\n)",
                                        "item/cat_appinsightsresult": "@if(\n    empty(body('Filter_array:_Child_Test_App_Insights_Result')),\n\t'No Azure Application Insights Result',\n\tbody('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result']\n)",
                                        "item/cat_resultreason": "@if(\n        empty(body('Filter_array:_Child_Test_App_Insights_Result')),\n    if(\n        or(\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4)\n        ),\n        'Impossible to evaluate: no Azure Application Insights result',\n        if(\n            equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\n            'No Azure Application Insights result, but result can still be assessed with AI Builder',\n            'Impossible to evaluate: no Azure Application Insights result'\n        )\n    ),\n    if(\n        equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\n        if(\n            startsWith(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'Filtered'),\n            'Answer was moderated',\n            'Moderation was expected'\n        ),\n        if(\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4),\n            if(\n                or(\n                    equals(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'No Search Results'),\n                    equals(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'Answer not Found in Search Results')\n                ),\n                'Answer was not generated because of no search results',\n                'No search results were expected'\n            ),\n            if(\n                equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\n               'Result still needs to be assessed by AI Builder',\n               'Could not assess the answer'\n            )\n        )\n    )\n)"
                                      },
                                      "host": {
                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                        "operationId": "UpdateRecord",
                                        "connectionName": "shared_commondataserviceforapps"
                                      }
                                    },
                                    "metadata": {
                                      "operationMetadataId": "15aaca7b-99dd-469b-99b8-9eae5e9e7a11"
                                    }
                                  },
                                  "Condition:_Check_for_Critical_Tests": {
                                    "type": "If",
                                    "expression": {
                                      "equals": [
                                        "@items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_critical']",
                                        "@true"
                                      ]
                                    },
                                    "actions": {
                                      "Set_variable:_MultiTurnResult": {
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "MultiturnResult",
                                          "value": "@if(\n    empty(body('Filter_array:_Child_Test_App_Insights_Result')),\n    if(\n        or(\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4)\n        ),\n        3,\n        if(\n            equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\n            5,\n            3\n        )\n    ),\n    if(\n        equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 3),\n        if(\n\t\t\tstartsWith(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'Filtered'),\n            1,\n            2\n        ),\n        if(\n            equals(items('Apply_to_each:_Child_Agent_Test_Results')?['cat_copilottestid/cat_generativeansweroutcomecode'], 4),\n            if(\n                or(\n                    equals(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'No Search Results'),\n                    equals(body('Filter_array:_Child_Test_App_Insights_Result')[0]?['Result'], 'Answer not Found in Search Results')\n                ),\n                1,\n                2\n            ),\n            if(\n                equals(outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled'], true),\n                5,\n                3\n            )\n        )\n    )\n)"
                                        },
                                        "metadata": {
                                          "operationMetadataId": "de1eb8f4-e6e9-4e0a-9ad3-d844c1f73367"
                                        }
                                      },
                                      "Condition:_Check_if_test_failed_or_error_out": {
                                        "type": "If",
                                        "expression": {
                                          "or": [
                                            {
                                              "equals": [
                                                "@variables('MultiturnResult')",
                                                2
                                              ]
                                            },
                                            {
                                              "equals": [
                                                "@variables('MultiturnResult')",
                                                3
                                              ]
                                            },
                                            {
                                              "equals": [
                                                "@variables('MultiturnResult')",
                                                4
                                              ]
                                            }
                                          ]
                                        },
                                        "actions": {
                                          "Set_variable:_ContinueMultiTurnProcessing": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "ContinueMultiturnProcessing",
                                              "value": "@false"
                                            },
                                            "metadata": {
                                              "operationMetadataId": "b0b2871c-d906-45e3-a3b8-b6febd5af8d1"
                                            }
                                          },
                                          "Set_variable:_MultiTurnPendingResult_2": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "MultiturnPendingResult",
                                              "value": "@false"
                                            },
                                            "runAfter": {
                                              "Set_variable:_ContinueMultiTurnProcessing": [
                                                "Succeeded"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "b94a866c-fad9-420a-9d00-dccd476cd217"
                                            }
                                          }
                                        },
                                        "else": {
                                          "actions": {
                                            "Set_variable:_MultiTurnPendingResult": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "MultiturnPendingResult",
                                                "value": "@if(equals(variables('MultiturnResult'), 5), true, false)"
                                              },
                                              "metadata": {
                                                "operationMetadataId": "b94a866c-fad9-420a-9d00-dccd476cd217"
                                              }
                                            }
                                          }
                                        },
                                        "runAfter": {
                                          "Set_variable:_MultiTurnResult": [
                                            "Succeeded"
                                          ]
                                        },
                                        "metadata": {
                                          "operationMetadataId": "4f8b67dc-88e8-42a9-b5a8-11c0fbc9d776"
                                        }
                                      }
                                    },
                                    "else": {
                                      "actions": {}
                                    },
                                    "runAfter": {
                                      "Update_a_row:_Agent_Child_Result": [
                                        "Succeeded"
                                      ]
                                    },
                                    "metadata": {
                                      "operationMetadataId": "724a24dc-dd7c-44fb-a5ef-4a7358f99bd9"
                                    }
                                  }
                                },
                                "else": {
                                  "actions": {}
                                },
                                "runAfter": {
                                  "Filter_array:_Child_Test_App_Insights_Result": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "53b8da92-5a51-4906-87bb-35bd2c921458"
                                }
                              }
                            },
                            "runAfter": {
                              "Select_TestUtterence_with_Result": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "83f510ca-343d-49fc-b7a7-567be88681e0"
                            }
                          },
                          "Update_a_row:_Parent_Multiturn_Agent_Test_Result": {
                            "type": "OpenApiConnection",
                            "inputs": {
                              "parameters": {
                                "entityName": "cat_copilottestresults",
                                "recordId": "@items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestresultid']",
                                "item/cat_resultcode": "@if(variables('MultiturnPendingResult'), \r\n\t5, \r\n\tif( greater(variables('MultiturnResult'), 0), \r\n\t\tvariables('MultiturnResult'), \r\n\t\titems('Apply_to_each_Generative_Answers_Result')?['cat_resultcode']\r\n\t)\r\n)"
                              },
                              "host": {
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                "operationId": "UpdateOnlyRecord",
                                "connectionName": "shared_commondataserviceforapps"
                              }
                            },
                            "runAfter": {
                              "Apply_to_each:_Child_Agent_Test_Results": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "64b99d18-70b3-4cc7-9c2d-63edd12136c7"
                            }
                          }
                        },
                        "else": {
                          "actions": {}
                        },
                        "runAfter": {
                          "List_rows:_Get_Child_Test_Results": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "58e07c4f-a937-4c22-a59a-fad141c5d0f1"
                        }
                      },
                      "Set_variable:_ContinueMultiturnProcessing_for_each_Multiturn_test": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "ContinueMultiturnProcessing",
                          "value": "@true"
                        },
                        "metadata": {
                          "operationMetadataId": "fba16fea-00ef-4938-8df0-4930e0cf192a"
                        }
                      },
                      "Set_variable:_MultiturnPendingResult_for_each_Multiturn_test": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "MultiturnPendingResult",
                          "value": "@false"
                        },
                        "runAfter": {
                          "Set_variable:_ContinueMultiturnProcessing_for_each_Multiturn_test": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "d8358c9c-8455-466d-a062-c930c4f558cf"
                        }
                      },
                      "List_rows:_Get_Child_Test_Results": {
                        "type": "OpenApiConnection",
                        "inputs": {
                          "parameters": {
                            "entityName": "cat_copilottestresults",
                            "$select": "cat_name, cat_copilottestresultid, cat_response, cat_responsereceivedtimestamp, cat_appinsightsmessage",
                            "$filter": "_cat_copilottestrunid_value eq '@{triggerOutputs()?['body/InputParameters/CopilotTestRunId']}' \nand statecode eq 0 \nand cat_resultcode ne 4 \nand cat_CopilotTestId/cat_testtypecode eq 4 \nand _cat_parent_value eq '@{items('Apply_to_each_Generative_Answers_Result')?['cat_copilottestresultid']}'",
                            "$orderby": "createdon asc",
                            "$expand": "cat_CopilotTestId($select=cat_generativeansweroutcomecode,cat_expectedresponse,cat_testutterance,cat_critical)"
                          },
                          "host": {
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                            "operationId": "ListRecords",
                            "connectionName": "shared_commondataserviceforapps"
                          },
                          "retryPolicy": {
                            "type": "none"
                          }
                        },
                        "runAfter": {
                          "Set_variable:_MultiturnPendingResult_for_each_Multiturn_test": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "025bb9de-a9e8-4e24-846f-4db3caed4627"
                        }
                      }
                    },
                    "metadata": {
                      "operationMetadataId": "9cb840c9-eba1-426b-b6e2-de0f2a4d2aea"
                    }
                  }
                }
              },
              "metadata": {
                "operationMetadataId": "6e1a7ad0-b4a7-4715-adca-74605554280c"
              }
            }
          },
          "runAfter": {
            "Get_Flow_Endpoint": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "fdd67cc2-01c6-4669-beb8-4a8c089f6504"
          }
        },
        "Update_Copilot_Test_Run:_Running": {
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "entityName": "cat_copilottestruns",
              "recordId": "@triggerOutputs()?['body/InputParameters/CopilotTestRunId']",
              "item/cat_appinsightsenrichmentstatuscode": 2
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "UpdateRecord",
              "connectionName": "shared_commondataserviceforapps"
            }
          },
          "runAfter": {
            "Condition_Skip_Delay": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "1879daca-4f37-49d8-8b18-6a8cf166f470"
          }
        },
        "Update_Copilot_Test_Run:_Complete": {
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "entityName": "cat_copilottestruns",
              "recordId": "@triggerOutputs()?['body/InputParameters/CopilotTestRunId']",
              "item/cat_appinsightsenrichmentstatuscode": 3,
              "item/cat_errordetails": "@concat(\r\n  outputs('Update_Copilot_Test_Run:_Running')?['body/cat_errordetails'],\r\n  '<br/>',\r\n  '<strong>',\r\n  workflow()?['tags']?['flowDisplayName'],\r\n  '</strong> flow run: <a href=\"',\r\n  outputs('Get_Flow_Endpoint'),\r\n  'environments/',\r\n  workflow()?['tags']?['environmentName'],\r\n  '/solutions/fd140aaf-4df4-11dd-bd17-0019b9312238/flows/',\r\n  workflow()?['name'],\r\n  '/runs/',\r\n  workflow()?['run']?['name'],\r\n  '\" target=\"_blank\" rel=\"noopener noreferrer\">Click here to open the flow run</a>'\r\n)"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "UpdateRecord",
              "connectionName": "shared_commondataserviceforapps"
            }
          },
          "runAfter": {
            "Perform_a_bound_action:_Update_Rollup_Columns": [
              "Succeeded",
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "46100016-2f1b-4e28-9ef7-90648debe3d9"
          }
        },
        "Update_Copilot_Test_Run:_Error": {
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "entityName": "cat_copilottestruns",
              "recordId": "@triggerOutputs()?['body/InputParameters/CopilotTestRunId']",
              "item/cat_appinsightsenrichmentstatuscode": 6,
              "item/cat_errordetails": "@concat(\r\n  body('Update_Copilot_Test_Run:_Running')?['cat_errordetails'],\r\n  '<br/>',\r\n  'Failed <strong>',\r\n  workflow()?['tags']?['flowDisplayName'],\r\n  '</strong> flow run: <a href=\"',\r\n  outputs('Get_Flow_Endpoint'),\r\n  'environments/',\r\n  workflow()?['tags']?['environmentName'],\r\n  '/solutions/fd140aaf-4df4-11dd-bd17-0019b9312238/flows/',\r\n  workflow()?['name'],\r\n  '/runs/',\r\n  workflow()?['run']?['name'],\r\n  '\" target=\"_blank\" rel=\"noopener noreferrer\">Click here to open the flow run</a>'\r\n)\r\n",
              "item/cat_generatedanswersanalysiscode": 4
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "UpdateRecord",
              "connectionName": "shared_commondataserviceforapps"
            }
          },
          "runAfter": {
            "Apply_to_each_Generative_Answers_Result": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "46100016-2f1b-4e28-9ef7-90648debe3d9"
          }
        },
        "Perform_a_bound_action:_Update_Rollup_Columns": {
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "entityName": "cat_copilottestruns",
              "actionName": "Microsoft.Dynamics.CRM.cat_RunRollupColumnsUpdates",
              "recordId": "@triggerOutputs()?['body/InputParameters/CopilotTestRunId']",
              "item/DataverseUriHost": "@uriHost(outputs('Get_Copilot_Configuration')?['body/@odata.id'])",
              "item/CopilotTestRunId": "@triggerOutputs()?['body/InputParameters/CopilotTestRunId']"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "PerformBoundAction",
              "connectionName": "shared_commondataserviceforapps"
            }
          },
          "runAfter": {
            "Apply_to_each_Generative_Answers_Result": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "af483f4c-32dd-412b-a719-f226b3756087"
          }
        },
        "Condition:_If_Analyze_Generative_Answers_is_enabled": {
          "type": "If",
          "expression": {
            "equals": [
              "@outputs('Get_Copilot_Configuration')?['body/cat_isgeneratedanswersanalysisenabled']",
              true
            ]
          },
          "actions": {
            "Perform_a_bound_action:_Run_AI_Builder_Analysis": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_copilottestruns",
                  "actionName": "Microsoft.Dynamics.CRM.cat_RunAIBuilderAnalysis",
                  "recordId": "@triggerOutputs()?['body/InputParameters/CopilotTestRunId']",
                  "item/CopilotTestRunId": "@triggerOutputs()?['body/InputParameters/CopilotTestRunId']",
                  "item/CopilotTestSetId": "@triggerOutputs()?['body/InputParameters/CopilotTestSetId']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "PerformBoundAction",
                  "connectionName": "shared_commondataserviceforapps_1"
                }
              },
              "metadata": {
                "operationMetadataId": "cc622639-9ae0-4c18-aa8a-0dfcd7171aff"
              }
            }
          },
          "else": {
            "actions": {}
          },
          "runAfter": {
            "Update_Copilot_Test_Run:_Complete": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "653f3f78-5dfe-462a-a3ab-291541720e2d"
          }
        },
        "Condition_Skip_Delay": {
          "type": "If",
          "expression": {
            "and": [
              {
                "equals": [
                  "@triggerBody()?['InputParameters']?['SkipDelay']",
                  "@true"
                ]
              }
            ]
          },
          "actions": {},
          "else": {
            "actions": {
              "Delay": {
                "type": "Wait",
                "inputs": {
                  "interval": {
                    "count": "@if(equals(parameters('Delay for Azure Application Insights Enrichment (Minutes) (cat_DelayforAzureApplicationInsightsEnrichment)'), null), 5, parameters('Delay for Azure Application Insights Enrichment (Minutes) (cat_DelayforAzureApplicationInsightsEnrichment)'))",
                    "unit": "Minute"
                  }
                },
                "metadata": {
                  "operationMetadataId": "4d599376-4b60-4b5b-a3d0-f167ef6bc4ec"
                }
              }
            }
          },
          "runAfter": {
            "Get_Copilot_Configuration": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "90c95f0e-82b3-45b9-8beb-4995df28e587"
          }
        },
        "Condition:_If_Azure_App_Insights_Environment_Variable_Secret": {
          "type": "If",
          "expression": {
            "equals": [
              "@outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightssecretlocationcode']",
              2
            ]
          },
          "actions": {
            "Get_Azure_App_Insights_Secret": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "actionName": "RetrieveEnvironmentVariableSecretValue",
                  "item/EnvironmentVariableName": "@outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightsenvironmentvariable']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "PerformUnboundAction",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs",
                    "outputs"
                  ]
                }
              },
              "metadata": {
                "operationMetadataId": "c48d1c4b-2831-4036-9ce5-579781ffd80f"
              }
            }
          },
          "else": {
            "actions": {}
          },
          "runAfter": {
            "Update_Copilot_Test_Run:_Running": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "560816de-2f95-4f45-9c92-9685a53d27b5"
          }
        },
        "Generate_Azure_App_Insights_Access_Token": {
          "type": "OpenApiConnection",
          "inputs": {
            "parameters": {
              "actionName": "cat_GenerateAppInsightsAccessToken",
              "item/cat_AppInsightsClientId": "@outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightsclientid']",
              "item/cat_AppInsightsTenantId": "@outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightstenantid']",
              "item/cat_AppInsightsClientSecret": "@if(equals(outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightssecretlocationcode'], 1),\r\n   outputs('Get_Copilot_Configuration')?['body/cat_azureappinsightssecret'],\r\n   outputs('Get_Azure_App_Insights_Secret')?['body/EnvironmentVariableSecretValue'])"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "operationId": "PerformUnboundAction",
              "connectionName": "shared_commondataserviceforapps"
            }
          },
          "runAfter": {
            "Condition:_If_Azure_App_Insights_Environment_Variable_Secret": [
              "Succeeded"
            ]
          },
          "runtimeConfiguration": {
            "secureData": {
              "properties": [
                "inputs",
                "outputs"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "d879d350-e327-4387-b544-f6dd4e3a20d7"
          }
        },
        "Parse_Token_Response": {
          "type": "ParseJson",
          "inputs": {
            "content": "@outputs('Generate_Azure_App_Insights_Access_Token')?['body/cat_AppInsightsResponse']",
            "schema": {
              "type": "object",
              "properties": {
                "token_type": {
                  "type": "string"
                },
                "expires_in": {
                  "type": "string"
                },
                "ext_expires_in": {
                  "type": "string"
                },
                "expires_on": {
                  "type": "string"
                },
                "not_before": {
                  "type": "string"
                },
                "resource": {
                  "type": "string"
                },
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "runAfter": {
            "Generate_Azure_App_Insights_Access_Token": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "fd4e7717-60ba-4656-85c6-ce3da676563a"
          }
        },
        "Initialize_variable:_ContinueMultiturnProcessing": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ContinueMultiturnProcessing",
                "type": "boolean"
              }
            ]
          },
          "runAfter": {
            "Get_Generative_Answers_Copilot_Test_Results": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "bfa823e7-3504-432e-990e-589d29149f0b"
          }
        },
        "Initialize_variable:_MultiturnResult": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "MultiturnResult",
                "type": "integer",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Initialize_variable:_ContinueMultiturnProcessing": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a3125a46-5313-4d02-bbfb-057eceb6cd97"
          }
        },
        "Initialize_variable:_MultiturnPendingResult": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "MultiturnPendingResult",
                "type": "boolean"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable:_MultiturnResult": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "cd2678c6-278c-4208-b809-513e48fa9363"
          }
        },
        "Get_Flow_Endpoint": {
          "type": "Compose",
          "inputs": "@if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'gcc'), 'https://make.gov.powerautomate.us/', \r\n    if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'gcc(high)'), 'https://make.high.powerautomate.us/', \r\n        if(equals(toLower(parameters('Power Automate Region (cat_PowerAutomateEndpoint)')), 'dod'), 'https://make.powerautomate.appsplatform.us/', \r\n            'https://make.powerautomate.com/'\r\n        )\r\n    )\r\n)",
          "runAfter": {
            "Initialize_variable:_MultiturnPendingResult": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "39e693bc-3942-4177-a3ff-2e3356d893dd"
          }
        }
      }
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}