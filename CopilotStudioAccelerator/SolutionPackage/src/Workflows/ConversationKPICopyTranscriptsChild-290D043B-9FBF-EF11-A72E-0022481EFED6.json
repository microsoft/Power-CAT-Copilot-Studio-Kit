{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps_1": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_CopilotStudioAcceleratorDataverse"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "Record Id",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter Record Id",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "Start Date",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter Start Date",
                  "x-ms-content-hint": "TEXT"
                },
                "text_2": {
                  "title": "End Date",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter End Date",
                  "x-ms-content-hint": "TEXT"
                },
                "text_3": {
                  "title": "Source",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Source should be either Manual or Scheduled",
                  "x-ms-content-hint": "TEXT",
                  "enum": [
                    "Manual",
                    "Scheduled"
                  ]
                }
              },
              "required": [
                "text_3"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "fb84c958-803d-487a-bfbc-ce23579f4ef5"
          }
        }
      },
      "actions": {
        "Initialize_variable:_CopilotConfigurationFilterExpression": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "CopilotConfigurationFilterExpression",
                "type": "string"
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "0dda7b9e-db7c-4c1e-881a-8204e250890e"
          }
        },
        "Initialize_variable:_ConversationTranscriptFilterExpression": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ConversationTranscriptFilterExpression",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable:_CopilotConfigurationFilterExpression": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "6e37908d-7a29-48d0-944c-70b79b815366"
          }
        },
        "Scope:_Try": {
          "type": "Scope",
          "actions": {
            "List_rows:_Copilot_Configurations": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_copilotconfigurations",
                  "$select": "cat_copilotconfigurationid, cat_dataverseurl, cat_copilotid, cat_trackedvariables, cat_iscopyfulltranscriptenabled",
                  "$filter": "@variables('CopilotConfigurationFilterExpression')"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "connectionName": "shared_commondataserviceforapps_1"
                }
              },
              "runAfter": {
                "Condition:_Flow_Invocation_-_Manual_or_Scheduled": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "4a92fc29-483e-40c7-9420-e8552bb79c09"
              }
            },
            "Apply_to_each:_Copilot_Configurations": {
              "type": "Foreach",
              "foreach": "@outputs('List_rows:_Copilot_Configurations')?['body/value']",
              "actions": {
                "List_rows_from_selected_environment:_Copilot_components": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "organization": "@items('Apply_to_each:_Copilot_Configurations')?['cat_dataverseurl']",
                      "entityName": "botcomponents",
                      "$select": "botcomponentid,name,statecode,createdon,schemaname,componenttype,description",
                      "$filter": "_parentbotid_value eq '@{items('Apply_to_each:_Copilot_Configurations')?['cat_copilotid']}'"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecordsWithOrganization",
                      "connectionName": "shared_commondataserviceforapps_1"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "0c42bfc8-8473-41a4-a3e6-206fdbc74d01"
                  }
                },
                "Select:_Bot_Components": {
                  "type": "Select",
                  "inputs": {
                    "from": "@outputs('List_rows_from_selected_environment:_Copilot_components')?['body/value']",
                    "select": {
                      "botcomponentid": "@item()?['botcomponentid']",
                      "name": "@item()?['name']",
                      "statecode": "@item()?['statecode']",
                      "statecodename": "@item()?['statecode@OData.Community.Display.V1.FormattedValue']",
                      "createdon": "@item()?['createdon']",
                      "schemaname": "@item()?['schemaname']",
                      "componenttype": "@item()?['componenttype']",
                      "componenttypename": "@item()?['componenttype@OData.Community.Display.V1.FormattedValue']",
                      "description": "@item()?['description']"
                    }
                  },
                  "runAfter": {
                    "List_rows_from_selected_environment:_Copilot_components": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c6f142cd-1550-4e62-be7a-edb886067fcd"
                  }
                },
                "Update_a_row:_Copilot_Configuration": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "cat_copilotconfigurations",
                      "recordId": "@items('Apply_to_each:_Copilot_Configurations')?['cat_copilotconfigurationid']",
                      "item/cat_copilotcomponents": "@body('Select:_Bot_Components')"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "UpdateRecord",
                      "connectionName": "shared_commondataserviceforapps_1"
                    }
                  },
                  "runAfter": {
                    "Select:_Bot_Components": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "e86e059d-7dc6-4028-b579-3da20bd2723b"
                  }
                },
                "Run_a_Child_Flow:_Conversation_KPIs_Copy_Transcripts_Grandchild": {
                  "type": "Workflow",
                  "inputs": {
                    "host": {
                      "workflowReferenceName": "09a76655-9fbf-ef11-a72e-0022481efed6"
                    },
                    "body": {
                      "text": "@items('Apply_to_each:_Copilot_Configurations')?['cat_copilotid']",
                      "text_1": "@items('Apply_to_each:_Copilot_Configurations')?['cat_copilotconfigurationid']",
                      "text_2": "@variables('ConversationTranscriptFilterExpression')",
                      "text_3": "@if(empty(items('Apply_to_each:_Copilot_Configurations')?['cat_trackedvariables']), '', items('Apply_to_each:_Copilot_Configurations')?['cat_trackedvariables'])",
                      "text_4": "@outputs('Add_a_new_row:_Logs')?['body/cat_copilotstudiokitlogsid']",
                      "text_5": "@items('Apply_to_each:_Copilot_Configurations')?['cat_dataverseurl']",
                      "boolean": "@items('Apply_to_each:_Copilot_Configurations')?['cat_iscopyfulltranscriptenabled']"
                    },
                    "retryPolicy": {
                      "type": "none"
                    }
                  },
                  "runAfter": {
                    "Update_a_row:_Copilot_Configuration": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "61b6f420-38c6-4c90-9487-0ad03eaef258"
                  }
                },
                "Check_for_Grandchild_flow_errors": {
                  "type": "If",
                  "expression": {
                    "equals": [
                      "@not(empty(outputs('Run_a_Child_Flow:_Conversation_KPIs_Copy_Transcripts_Grandchild')?['Body']?['errormessage']))",
                      "@true"
                    ]
                  },
                  "actions": {
                    "Append_to_string_variable:_ErrorMessage": {
                      "type": "AppendToStringVariable",
                      "inputs": {
                        "name": "ErrorMessage",
                        "value": "@body('Run_a_Child_Flow:_Conversation_KPIs_Copy_Transcripts_Grandchild')?['errormessage']"
                      },
                      "metadata": {
                        "operationMetadataId": "ab87fc5d-6b70-4922-bb89-443c676e8bd9"
                      }
                    }
                  },
                  "else": {
                    "actions": {}
                  },
                  "runAfter": {
                    "Run_a_Child_Flow:_Conversation_KPIs_Copy_Transcripts_Grandchild": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "e629f45c-3a9c-4f79-a991-9d4a7282becb"
                  }
                }
              },
              "runAfter": {
                "List_rows:_Copilot_Configurations": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 10
                }
              },
              "metadata": {
                "operationMetadataId": "ef68e4a3-b0ee-4492-bc6e-586c3c4ccd87"
              }
            },
            "Add_a_new_row:_Logs": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_copilotstudiokitlogses",
                  "item/cat_executionstatuscode": 2,
                  "item/cat_CopilotConfigurationId@odata.bind": "@if(equals(triggerBody()?['text_3'], 'Manual'), concat('/cat_copilotconfigurations(', triggerBody()?['text'], ')'), null)",
                  "item/cat_cloudflowinstanceurl": "https://make.powerautomate.com/environments/@{workflow()?['tags']?['environmentName']}/solutions/fd140aaf-4df4-11dd-bd17-0019b9312238/flows/@{workflow()?['name']}/runs/@{workflow()?['run']?['name']}",
                  "item/cat_cloudflowname": "Conversation KPIs Copy Transcripts Child",
                  "item/cat_enddate": "@if(equals(triggerBody()['text_3'], 'Manual'), formatDateTime(triggerBody()['text_2'], 'yyyy-MM-ddTHH:mm:ssZ'), null)",
                  "item/cat_startdate": "@if(equals(triggerBody()['text_3'], 'Manual'), formatDateTime(triggerBody()['text_1'], 'yyyy-MM-ddTHH:mm:ssZ'), null)"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "connectionName": "shared_commondataserviceforapps_1"
                }
              },
              "metadata": {
                "operationMetadataId": "1ff98c93-94ce-4fe2-948d-285e6e86c1ab"
              }
            },
            "Condition:_Flow_Invocation_-_Manual_or_Scheduled": {
              "type": "If",
              "expression": {
                "equals": [
                  "@triggerBody()['text_3']",
                  "Manual"
                ]
              },
              "actions": {
                "Set_variable:_CopilotConfigurationFilterExpression_-_Manual": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "CopilotConfigurationFilterExpression",
                    "value": "cat_copilotconfigurationid eq '@{triggerBody()['text']}'"
                  },
                  "metadata": {
                    "operationMetadataId": "fc02c1d8-fb34-458f-b059-42f6016f5161"
                  }
                },
                "Set_variable:_ConversationTranscriptFilterExpression_-_Manual": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "ConversationTranscriptFilterExpression",
                    "value": "<condition attribute=\"createdon\" operator=\"on-or-after\" value=\"@{formatDateTime(triggerBody()['text_1'], 'yyyy-MM-ddTHH:mm:ssZ')}\" />\n      <condition attribute=\"createdon\" operator=\"on-or-before\" value=\"@{addDays(formatDateTime(triggerBody()['text_2'], 'yyyy-MM-ddTHH:mm:ssZ'), 1)}\" />"
                  },
                  "runAfter": {
                    "Set_variable:_CopilotConfigurationFilterExpression_-_Manual": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "afe5b973-1306-4c5b-b3c5-ac0fd3585e67"
                  }
                }
              },
              "else": {
                "actions": {
                  "Set_variable:_CopilotConfigurationFilterExpression_-_Scheduled": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "CopilotConfigurationFilterExpression",
                      "value": "statecode eq 0 and contains(cat_configurationtypescodes, '2')"
                    },
                    "metadata": {
                      "operationMetadataId": "32bb6d5f-a461-4bdb-8add-f4d4adc0023d"
                    }
                  },
                  "Set_variable:_ConversationTranscriptFilterExpression_-_Scheduled": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "ConversationTranscriptFilterExpression",
                      "value": "<condition attribute=\"createdon\" operator=\"on-or-after\" value=\"@{formatDateTime(addDays(utcNow(), -1), 'yyyy-MM-ddTHH:mm:ssZ')}\" />\n      <condition attribute=\"createdon\" operator=\"on-or-before\" value=\"@{utcNow()}\" />"
                    },
                    "runAfter": {
                      "Set_variable:_CopilotConfigurationFilterExpression_-_Scheduled": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "ea3db569-b9e5-4512-a07b-a01e0aa8a048"
                    }
                  }
                }
              },
              "runAfter": {
                "Add_a_new_row:_Logs": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "492f4cb9-6a1f-410c-9c82-f61377eedc77"
              }
            }
          },
          "runAfter": {
            "Initialize_variable:_ErrorMessage": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "9bda3686-84e9-4fde-939b-7455d7182198"
          }
        },
        "Initialize_variable:_ErrorMessage": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ErrorMessage",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable:_ConversationTranscriptFilterExpression": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "ea84130f-dc6d-4e6a-8f0c-750e262c2e67"
          }
        },
        "Scope:_Catch": {
          "type": "Scope",
          "actions": {
            "Filter_array:_Error_Actions": {
              "type": "Query",
              "inputs": {
                "from": "@result('Scope:_Try')",
                "where": "@or(equals(item()?['Status'], 'Failed'), equals(item()?['Status'], 'TimedOut'))"
              },
              "metadata": {
                "operationMetadataId": "318aa9b2-4531-451c-b162-84cf7a4a236e"
              }
            },
            "Append_to_string_variable:_ErrorMessage2": {
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "ErrorMessage",
                "value": "@first(body('Filter_array:_Error_Actions'))?['error']?['message']"
              },
              "runAfter": {
                "Filter_array:_Error_Actions": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "7e6d43a5-9637-45f1-8be3-33fcce591038"
              }
            }
          },
          "runAfter": {
            "Scope:_Try": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "4f2e4827-62c8-4225-94cd-14089e7ac8f7"
          }
        },
        "Scope:_Finally": {
          "type": "Scope",
          "actions": {
            "Respond_to_a_Power_App_or_flow": {
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "title": "Response",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": {}
                },
                "statusCode": 200,
                "body": {
                  "response": "Flow execution completed."
                }
              },
              "runAfter": {
                "Update_a_row:_Logs": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "23216dd2-8de7-4205-be4d-475f3e204294"
              }
            },
            "Get_a_row_by_ID:_Logs": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_copilotstudiokitlogses",
                  "recordId": "@outputs('Add_a_new_row:_Logs')?['body/cat_copilotstudiokitlogsid']",
                  "$select": "cat_errormessage, cat_executionstatuscode"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "GetItem",
                  "connectionName": "shared_commondataserviceforapps_1"
                }
              },
              "metadata": {
                "operationMetadataId": "a3a2e5f5-5d45-4d03-91e6-4008a239ac6c"
              }
            },
            "Append_to_string_variable:_ErrorMessage3": {
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "ErrorMessage",
                "value": "@outputs('Get_a_row_by_ID:_Logs')?['body/cat_errormessage']"
              },
              "runAfter": {
                "Get_a_row_by_ID:_Logs": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "86ab41de-9df9-42ee-b285-eb5c2d62dd1a"
              }
            },
            "Update_a_row:_Logs": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "cat_copilotstudiokitlogses",
                  "recordId": "@outputs('Add_a_new_row:_Logs')?['body/cat_copilotstudiokitlogsid']",
                  "item/cat_executionstatuscode": "@if(not(empty(variables('ErrorMessage'))), 4, 3)",
                  "item/cat_errormessage": "@if(not(empty(variables('ErrorMessage'))), variables('ErrorMessage'), null)"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "connectionName": "shared_commondataserviceforapps_1"
                }
              },
              "runAfter": {
                "Append_to_string_variable:_ErrorMessage3": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9f447776-551f-41e3-a432-ecfb376e623f"
              }
            }
          },
          "runAfter": {
            "Scope:_Catch": [
              "Succeeded",
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "3b16a931-71ef-4a27-b6c8-cea6a9fc38f1"
          }
        }
      }
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}